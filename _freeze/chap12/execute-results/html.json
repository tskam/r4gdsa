{
  "hash": "709ec19b8885b772107ac12d44cf4761",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Geographical Segmentation with Spatially Constrained Clustering Techniques\"\ndate: \"November 29, 2023\"\ndate-modified: \"last-modified\"\nformat: html\nexecute:\n  warning: false\n  message: false\n  fig-retine: 3\n  freeze: true\n---\n\n\n## Overview\n\nIn this hands-on exercise, you will gain hands-on experience on how to delineate homogeneous region by using geographically referenced multivariate data. There are two major analysis, namely:\n\n-   hierarchical cluster analysis; and\n-   spatially constrained cluster analysis.\n\n### Learning Outcome\n\nBy the end of this hands-on exercise, you will able:\n\n-   to convert GIS polygon data into R's simple feature data.frame by using appropriate functions of **sf** package of R;\n-   to convert simple feature data.frame into R's SpatialPolygonDataFrame object by using appropriate **sf** of package of R;\n-   to perform custer analysis by using *hclust()* of Base R;\n-   to perform spatially constrained cluster analysis using *skater()* of Base R; and\n-   to visualise the analysis output by using **ggplot2** and **tmap** package.\n\n## Getting Started\n\n### The analytical question\n\nIn geobusiness and spatial policy, it is a common practice to delineate the market or planning area into homogeneous regions by using multivariate data. In this hands-on exercise, we are interested to delineate [Shan State](https://en.wikipedia.org/wiki/Shan_State), [Myanmar](https://en.wikipedia.org/wiki/Myanmar) into homogeneous regions by using multiple Information and Communication technology (ICT) measures, namely: Radio, Television, Land line phone, Mobile phone, Computer, and Internet at home.\n\n## The data\n\nTwo data sets will be used in this study. They are:\n\n-   Myanmar Township Boundary Data (i.e. *myanmar_township_boundaries*) : This is a GIS data in ESRI shapefile format. It consists of township boundary information of Myanmar. The spatial data are captured in polygon features.\n-   *Shan-ICT.csv*: This is an extract of [**The 2014 Myanmar Population and Housing Census Myanmar**](https://myanmar.unfpa.org/en/publications/2014-population-and-housing-census-myanmar-data-sheet) at the township level.\n\nBoth data sets are download from [Myanmar Information Management Unit (MIMU)](http://themimu.info/)\n\n### Installing and loading R packages\n\nBefore we get started, it is important for us to install the necessary R packages into R and launch these R packages into R environment.\n\nThe R packages needed for this exercise are as follows:\n\n-   Spatial data handling\n    -   **sf**, **rgdal** and **spdep**\n-   Attribute data handling\n    -   **tidyverse**, especially **readr**, **ggplot2** and **dplyr**\n-   Choropleth mapping\n    -   **tmap**\n-   Multivariate data visualisation and analysis\n    -   **coorplot**, **ggpubr**, and **heatmaply**\n-   Cluster analysis\n    -   **cluster**\n    -   **ClustGeo**\n\nThe code chunks below installs and launches these R packages into R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(spdep, tmap, sf, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)\n```\n:::\n\n\nNote: With **tidyverse**, we do not have to install **readr**, **ggplot2** and **dplyr** packages separately. In fact, **tidyverse** also installs other very useful R packages such as **tidyr**.\n\n## Data Import and Prepatation\n\n### Importing geospatial data into R environment\n\nIn this section, you will import Myanmar Township Boundary GIS data and its associated attrbiute table into R environment.\n\nThe Myanmar Township Boundary GIS data is in ESRI shapefile format. It will be imported into R environment by using the [*st_read()*](https://www.rdocumentation.org/packages/sf/versions/0.7-2/topics/st_read) function of **sf**.\n\nThe code chunks used are shown below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf <- st_read(dsn = \"chap12/data/geospatial\", \n                   layer = \"myanmar_township_boundaries\") %>%\n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\")) %>%\n  select(c(2:7))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `myanmar_township_boundaries' from data source \n  `D:\\tskam\\r4gdsa\\chap12\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nThe imported township boundary object is called *shan_sf*. It is saved in **simple feature data.frame** format. We can view the content of the newly created *shan_sf* simple features data.frame by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 55 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 96.15107 ymin: 19.29932 xmax: 101.1699 ymax: 24.15907\nGeodetic CRS:  WGS 84\nFirst 10 features:\n             ST ST_PCODE       DT   DT_PCODE        TS  TS_PCODE\n1  Shan (North)   MMR015  Mongmit MMR015D008   Mongmit MMR015017\n2  Shan (South)   MMR014 Taunggyi MMR014D001   Pindaya MMR014006\n3  Shan (South)   MMR014 Taunggyi MMR014D001   Ywangan MMR014007\n4  Shan (South)   MMR014 Taunggyi MMR014D001  Pinlaung MMR014009\n5  Shan (North)   MMR015  Mongmit MMR015D008    Mabein MMR015018\n6  Shan (South)   MMR014 Taunggyi MMR014D001     Kalaw MMR014005\n7  Shan (South)   MMR014 Taunggyi MMR014D001     Pekon MMR014010\n8  Shan (South)   MMR014 Taunggyi MMR014D001  Lawksawk MMR014008\n9  Shan (North)   MMR015  Kyaukme MMR015D003 Nawnghkio MMR015013\n10 Shan (North)   MMR015  Kyaukme MMR015D003   Kyaukme MMR015012\n                         geometry\n1  MULTIPOLYGON (((96.96001 23...\n2  MULTIPOLYGON (((96.7731 21....\n3  MULTIPOLYGON (((96.78483 21...\n4  MULTIPOLYGON (((96.49518 20...\n5  MULTIPOLYGON (((96.66306 24...\n6  MULTIPOLYGON (((96.49518 20...\n7  MULTIPOLYGON (((97.14738 19...\n8  MULTIPOLYGON (((96.94981 22...\n9  MULTIPOLYGON (((96.75648 22...\n10 MULTIPOLYGON (((96.95498 22...\n```\n\n\n:::\n:::\n\n\nNotice that sf.data.frame is conformed to Hardy Wickham's [tidy](https://edzer.github.io/rstudio_conf/#1) framework.\n\nSince *shan_sf* is conformed to tidy framework, we can also *glimpse()* to reveal the data type of it's fields.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(shan_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 55\nColumns: 7\n$ ST       <chr> \"Shan (North)\", \"Shan (South)\", \"Shan (South)\", \"Shan (South)…\n$ ST_PCODE <chr> \"MMR015\", \"MMR014\", \"MMR014\", \"MMR014\", \"MMR015\", \"MMR014\", \"…\n$ DT       <chr> \"Mongmit\", \"Taunggyi\", \"Taunggyi\", \"Taunggyi\", \"Mongmit\", \"Ta…\n$ DT_PCODE <chr> \"MMR015D008\", \"MMR014D001\", \"MMR014D001\", \"MMR014D001\", \"MMR0…\n$ TS       <chr> \"Mongmit\", \"Pindaya\", \"Ywangan\", \"Pinlaung\", \"Mabein\", \"Kalaw…\n$ TS_PCODE <chr> \"MMR015017\", \"MMR014006\", \"MMR014007\", \"MMR014009\", \"MMR01501…\n$ geometry <MULTIPOLYGON [°]> MULTIPOLYGON (((96.96001 23..., MULTIPOLYGON (((…\n```\n\n\n:::\n:::\n\n\n### Importing aspatial data into R environment\n\nThe csv file will be import using *read_csv* function of **readr** package.\n\nThe code chunks used are shown below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nict <- read_csv (\"chap12/data/aspatial/Shan-ICT.csv\")\n```\n:::\n\n\nThe imported InfoComm variables are extracted from **The 2014 Myanmar Population and Housing Census Myanmar**. The attribute data set is called *ict*. It is saved in R's \\* tibble data.frame\\* format.\n\nThe code chunk below reveal the summary statistics of *ict* data.frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(ict)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n District Pcode     District Name      Township Pcode     Township Name     \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Total households     Radio         Television    Land line phone \n Min.   : 3318    Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711    1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685    Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369    Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471    3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604    Max.   :30176   Max.   :62388   Max.   :6736.0  \n  Mobile phone      Computer      Internet at home\n Min.   :  150   Min.   :  20.0   Min.   :   8.0  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0  \n Median : 3559   Median : 244.0   Median : 316.0  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0  \n```\n\n\n:::\n:::\n\n\nThere are a total of eleven fields and 55 observation in the tibble data.frame.\n\n### Derive new variables using **dplyr** package\n\nThe unit of measurement of the values are number of household. Using these values directly will be bias by the underlying total number of households. In general, the townships with relatively higher total number of households will also have higher number of households owning radio, TV, etc.\n\nIn order to overcome this problem, we will derive the penetration rate of each ICT variable by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nict_derived <- ict %>%\n  mutate(`RADIO_PR` = `Radio`/`Total households`*1000) %>%\n  mutate(`TV_PR` = `Television`/`Total households`*1000) %>%\n  mutate(`LLPHONE_PR` = `Land line phone`/`Total households`*1000) %>%\n  mutate(`MPHONE_PR` = `Mobile phone`/`Total households`*1000) %>%\n  mutate(`COMPUTER_PR` = `Computer`/`Total households`*1000) %>%\n  mutate(`INTERNET_PR` = `Internet at home`/`Total households`*1000) %>%\n  rename(`DT_PCODE` =`District Pcode`,`DT`=`District Name`,\n         `TS_PCODE`=`Township Pcode`, `TS`=`Township Name`,\n         `TT_HOUSEHOLDS`=`Total households`,\n         `RADIO`=`Radio`, `TV`=`Television`, \n         `LLPHONE`=`Land line phone`, `MPHONE`=`Mobile phone`,\n         `COMPUTER`=`Computer`, `INTERNET`=`Internet at home`) \n```\n:::\n\n\nLet us review the summary statistics of the newly derived penetration rates using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(ict_derived)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   DT_PCODE              DT              TS_PCODE              TS           \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n TT_HOUSEHOLDS       RADIO             TV           LLPHONE      \n Min.   : 3318   Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711   1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685   Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369   Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471   3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604   Max.   :30176   Max.   :62388   Max.   :6736.0  \n     MPHONE         COMPUTER         INTERNET         RADIO_PR     \n Min.   :  150   Min.   :  20.0   Min.   :   8.0   Min.   : 21.05  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0   1st Qu.:138.95  \n Median : 3559   Median : 244.0   Median : 316.0   Median :210.95  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2   Mean   :215.68  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5   3rd Qu.:268.07  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0   Max.   :484.52  \n     TV_PR         LLPHONE_PR       MPHONE_PR       COMPUTER_PR    \n Min.   :116.0   Min.   :  2.78   Min.   : 36.42   Min.   : 3.278  \n 1st Qu.:450.2   1st Qu.: 22.84   1st Qu.:190.14   1st Qu.:11.832  \n Median :517.2   Median : 37.59   Median :305.27   Median :18.970  \n Mean   :509.5   Mean   : 51.09   Mean   :314.05   Mean   :24.393  \n 3rd Qu.:606.4   3rd Qu.: 69.72   3rd Qu.:428.43   3rd Qu.:29.897  \n Max.   :842.5   Max.   :181.49   Max.   :735.43   Max.   :92.402  \n  INTERNET_PR     \n Min.   :  1.041  \n 1st Qu.:  8.617  \n Median : 22.829  \n Mean   : 30.644  \n 3rd Qu.: 41.281  \n Max.   :117.985  \n```\n\n\n:::\n:::\n\n\nNotice that six new fields have been added into the data.frame. They are RADIO_PR, TV_PR, LLPHONE_PR, MPHONE_PR, COMPUTER_PR, and INTERNET_PR.\n\n## Exploratory Data Analysis (EDA)\n\n### EDA using statistical graphics\n\nWe can plot the distribution of the variables (i.e. Number of households with radio) by using appropriate Exploratory Data Analysis (EDA) as shown in the code chunk below.\n\nHistogram is useful to identify the overall distribution of the data values (i.e. left skew, right skew or normal distribution)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-9-1.png){width=384}\n:::\n:::\n\n\nBoxplot is useful to detect if there are outliers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-10-1.png){width=384}\n:::\n:::\n\n\nNext, we will also plotting the distribution of the newly derived variables (i.e. Radio penetration rate) by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-11-1.png){width=384}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-12-1.png){width=384}\n:::\n:::\n\n\nWhat can you observed from the distributions reveal in the histogram and boxplot.\n\nIn the figure below, multiple histograms are plotted to reveal the distribution of the selected variables in the *ict_derived* data.frame.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\nThe code chunks below are used to create the data visualisation. They consist of two main parts. First, we will create the individual histograms using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nradio <- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ntv <- ggplot(data=ict_derived, \n             aes(x= `TV_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nllphone <- ggplot(data=ict_derived, \n             aes(x= `LLPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nmphone <- ggplot(data=ict_derived, \n             aes(x= `MPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ncomputer <- ggplot(data=ict_derived, \n             aes(x= `COMPUTER_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ninternet <- ggplot(data=ict_derived, \n             aes(x= `INTERNET_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n```\n:::\n\n\nNext, the [*ggarrange()*](https://rpkgs.datanovia.com/ggpubr/reference/ggarrange.html) function of [**ggpubr**](https://rpkgs.datanovia.com/ggpubr/index.html) package is used to group these histograms together.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggarrange(radio, tv, llphone, mphone, computer, internet, \n          ncol = 3, \n          nrow = 2)\n```\n:::\n\n\n### EDA using choropleth map\n\n#### Joining geospatial data with aspatial data\n\nBefore we can prepare the choropleth map, we need to combine both the geospatial data object (i.e. *shan_sf*) and aspatial data.frame object (i.e. *ict_derived*) into one. This will be performed by using the [*left_join*](https://dplyr.tidyverse.org/reference/join.tbl_df.html) function of **dplyr** package. The *shan_sf* simple feature data.frame will be used as the base data object and the *ict_derived* data.frame will be used as the join table.\n\nThe code chunks below is used to perform the task. The unique identifier used to join both data objects is *TS_PCODE*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf <- left_join(shan_sf, \n                     ict_derived, by=c(\"TS_PCODE\"=\"TS_PCODE\"))\n  \nwrite_rds(shan_sf, \"chap12/data/rds/shan_sf.rds\")\n```\n:::\n\n\nThe message above shows that *TS_CODE* field is the common field used to perform the left-join.\n\nIt is important to note that there is no new output data been created. Instead, the data fields from *ict_derived* data frame are now updated into the data frame of *shan_sf*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf <- read_rds(\"chap12/data/rds/shan_sf.rds\")\n```\n:::\n\n\n#### Preparing a choropleth map\n\nTo have a quick look at the distribution of Radio penetration rate of Shan State at township level, a choropleth map will be prepared.\n\nThe code chunks below are used to prepare the choroplethby using the *qtm()* function of **tmap** package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(shan_sf, \"RADIO_PR\")\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\nIn order to reveal the distribution shown in the choropleth map above are bias to the underlying total number of households at the townships, we will create two choropleth maps, one for the total number of households (i.e. TT_HOUSEHOLDS.map) and one for the total number of household with Radio (RADIO.map) by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTT_HOUSEHOLDS.map <- tm_shape(shan_sf) + \n  tm_fill(col = \"TT_HOUSEHOLDS\",\n          n = 5,\n          style = \"jenks\", \n          title = \"Total households\") + \n  tm_borders(alpha = 0.5) \n\nRADIO.map <- tm_shape(shan_sf) + \n  tm_fill(col = \"RADIO\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Number Radio \") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(TT_HOUSEHOLDS.map, RADIO.map,\n             asp=NA, ncol=2)\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\nNotice that the choropleth maps above clearly show that townships with relatively larger number ot households are also showing relatively higher number of radio ownership.\n\nNow let us plot the choropleth maps showing the dsitribution of total number of households and Radio penetration rate by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(shan_sf) +\n    tm_polygons(c(\"TT_HOUSEHOLDS\", \"RADIO_PR\"),\n                style=\"jenks\") +\n    tm_facets(sync = TRUE, ncol = 2) +\n  tm_legend(legend.position = c(\"right\", \"bottom\"))+\n  tm_layout(outer.margins=0, asp=0)\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\nCan you identify the differences?\n\n## Correlation Analysis\n\nBefore we perform cluster analysis, it is important for us to ensure that the cluster variables are not highly correlated.\n\nIn this section, you will learn how to use [*corrplot.mixed()*](https://cran.r-project.org/web/packages/corrplot/corrplot.pdf) function of [**corrplot**](https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html) package to visualise and analyse the correlation of the input variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncluster_vars.cor = cor(ict_derived[,12:17])\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nThe correlation plot above shows that COMPUTER_PR and INTERNET_PR are highly correlated. This suggest that only one of them should be used in the cluster analysis instead of both.\n\n## Hierarchy Cluster Analysis\n\nIn this section, you will learn how to perform hierarchical cluster analysis. The analysis consists of four major steps:\n\n### Extracting clustering variables\n\nThe code chunk below will be used to extract the clustering variables from the *shan_sf* simple feature object into data.frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncluster_vars <- shan_sf %>%\n  st_set_geometry(NULL) %>%\n  select(\"TS.x\", \"RADIO_PR\", \"TV_PR\", \"LLPHONE_PR\", \"MPHONE_PR\", \"COMPUTER_PR\")\nhead(cluster_vars,10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\n1    Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\n2    Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\n3    Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\n4   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\n5     Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\n6      Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\n7      Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\n8   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\n9  Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\n10   Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n```\n\n\n:::\n:::\n\n\nNotice that the final clustering variables list does not include variable INTERNET_PR because it is highly correlated with variable COMPUTER_PR.\n\nNext, we need to change the rows by township name instead of row number by using the code chunk below\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrow.names(cluster_vars) <- cluster_vars$\"TS.x\"\nhead(cluster_vars,10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit     Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya     Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan     Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\nMabein       Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw         Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\nPekon         Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme     Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n```\n\n\n:::\n:::\n\n\nNotice that the row number has been replaced into the township name.\n\nNow, we will delete the TS.x field by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_ict <- select(cluster_vars, c(2:6))\nhead(shan_ict, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit   286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya   417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan   484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung  231.6499 541.7189   28.54454  249.4903    13.76255\nMabein    449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw     280.7624 611.6204   42.06478  408.7951    29.63160\nPekon     318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk  387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme   210.9548 601.1773   39.58267  372.4930    30.94709\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n### Data Standardisation\n\nIn general, multiple variables will be used in cluster analysis. It is not unusual their values range are different. In order to avoid the cluster analysis result is baised to clustering variables with large values, it is useful to standardise the input variables before performing cluster analysis.\n\n### Min-Max standardisation\n\nIn the code chunk below, *normalize()* of [*heatmaply*](https://cran.r-project.org/web/packages/heatmaply/index.html) package is used to stadardisation the clustering variables by using Min-Max method. The *summary()* is then used to display the summary statistics of the standardised clustering variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_ict.std <- normalize(shan_ict)\nsummary(shan_ict.std)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    RADIO_PR          TV_PR          LLPHONE_PR       MPHONE_PR     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.2544   1st Qu.:0.4600   1st Qu.:0.1123   1st Qu.:0.2199  \n Median :0.4097   Median :0.5523   Median :0.1948   Median :0.3846  \n Mean   :0.4199   Mean   :0.5416   Mean   :0.2703   Mean   :0.3972  \n 3rd Qu.:0.5330   3rd Qu.:0.6750   3rd Qu.:0.3746   3rd Qu.:0.5608  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n  COMPUTER_PR     \n Min.   :0.00000  \n 1st Qu.:0.09598  \n Median :0.17607  \n Mean   :0.23692  \n 3rd Qu.:0.29868  \n Max.   :1.00000  \n```\n\n\n:::\n:::\n\n\nNotice that the values range of the Min-max standardised clustering variables are 0-1 now.\n\n### Z-score standardisation\n\nZ-score standardisation can be performed easily by using [*scale()*](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/scale) of Base R. The code chunk below will be used to stadardisation the clustering variables by using Z-score method.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_ict.z <- scale(shan_ict)\ndescribe(shan_ict.z)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            vars  n mean sd median trimmed  mad   min  max range  skew kurtosis\nRADIO_PR       1 55    0  1  -0.04   -0.06 0.94 -1.85 2.55  4.40  0.48    -0.27\nTV_PR          2 55    0  1   0.05    0.04 0.78 -2.47 2.09  4.56 -0.38    -0.23\nLLPHONE_PR     3 55    0  1  -0.33   -0.15 0.68 -1.19 3.20  4.39  1.37     1.49\nMPHONE_PR      4 55    0  1  -0.05   -0.06 1.01 -1.58 2.40  3.98  0.48    -0.34\nCOMPUTER_PR    5 55    0  1  -0.26   -0.18 0.64 -1.03 3.31  4.34  1.80     2.96\n              se\nRADIO_PR    0.13\nTV_PR       0.13\nLLPHONE_PR  0.13\nMPHONE_PR   0.13\nCOMPUTER_PR 0.13\n```\n\n\n:::\n:::\n\n\nNotice the mean and standard deviation of the Z-score standardised clustering variables are 0 and 1 respectively.\n\n**Note:** [*describe()*](https://www.rdocumentation.org/packages/Hmisc/versions/4.4-0/topics/describe) of [**psych**](https://cran.r-project.org/web/packages/psych/index.html) package is used here instead of *summary()* of Base R because the earlier provides standard deviation.\n\n***Warning: Z-score standardisation method should only be used if we would assume all variables come from some normal distribution.***\n\n### Visualising the standardised clustering variables\n\nBeside reviewing the summary statistics of the standardised clustering variables, it is also a good practice to visualise their distribution graphical.\n\nThe code chunk below plot the scaled *Radio_PR* field.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nr <- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df <- as.data.frame(shan_ict.std)\ns <- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df <- as.data.frame(shan_ict.z)\nz <- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-28-1.png){width=1152}\n:::\n:::\n\n\n> What statistical conclusion can you draw from the histograms above?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nr <- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df <- as.data.frame(shan_ict.std)\ns <- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df <- as.data.frame(shan_ict.z)\nz <- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-29-1.png){width=1152}\n:::\n:::\n\n\n### Computing proximity matrix\n\nIn R, many packages provide functions to calculate distance matrix. We will compute the proximity matrix by using [*dist()*](https://stat.ethz.ch/R-manual/R-devel/library/stats/html/dist.html) of R.\n\n*dist()* supports six distance proximity calculations, they are: **euclidean, maximum, manhattan, canberra, binary and minkowski**. The default is *euclidean* proximity matrix.\n\nThe code chunk below is used to compute the proximity matrix using *euclidean* method.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproxmat <- dist(shan_ict, method = 'euclidean')\n```\n:::\n\n\nThe code chunk below can then be used to list the content of *proxmat* for visual inspection.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproxmat\n```\n:::\n\n\n### Computing hierarchical clustering\n\nIn R, there are several packages provide hierarchical clustering function. In this hands-on exercise, [*hclust()*](https://stat.ethz.ch/R-manual/R-devel/library/stats/html/hclust.html) of R stats will be used.\n\n*hclust()* employed agglomeration method to compute the cluster. Eight clustering algorithms are supported, they are: ward.D, ward.D2, single, complete, average(UPGMA), mcquitty(WPGMA), median(WPGMC) and centroid(UPGMC).\n\nThe code chunk below performs hierarchical cluster analysis using ward.D method. The hierarchical clustering output is stored in an object of class **hclust** which describes the tree produced by the clustering process.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhclust_ward <- hclust(proxmat, method = 'ward.D')\n```\n:::\n\n\nWe can then plot the tree by using *plot()* of R Graphics as shown in the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(hclust_ward, cex = 0.6)\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-33-1.png){width=960}\n:::\n:::\n\n\n### Selecting the optimal clustering algorithm\n\nOne of the challenge in performing hierarchical clustering is to identify stronger clustering structures. The issue can be solved by using use [*agnes()*](https://www.rdocumentation.org/packages/cluster/versions/2.1.0/topics/agnes) function of [**cluster**](https://cran.r-project.org/web/packages/cluster/) package. It functions like *hclus()*, however, with the *agnes()* function you can also get the agglomerative coefficient, which measures the amount of clustering structure found (values closer to 1 suggest strong clustering structure).\n\nThe code chunk below will be used to compute the agglomerative coefficients of all hierarchical clustering algorithms.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm <- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) <- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac <- function(x) {\n  agnes(shan_ict, method = x)$ac\n}\n\nmap_dbl(m, ac)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  average    single  complete      ward \n0.8131144 0.6628705 0.8950702 0.9427730 \n```\n\n\n:::\n:::\n\n\nWith reference to the output above, we can see that Ward's method provides the strongest clustering structure among the four methods assessed. Hence, in the subsequent analysis, only Ward's method will be used.\n\n### Determining Optimal Clusters\n\nAnother technical challenge face by data analyst in performing clustering analysis is to determine the optimal clusters to retain.\n\nThere are [three](https://statweb.stanford.edu/~gwalther/gap) commonly used methods to determine the optimal clusters, they are:\n\n-   [Elbow Method](https://en.wikipedia.org/wiki/Elbow_method_(clustering))\n-   [Average Silhouette Method](https://www.sciencedirect.com/science/article/pii/0377042787901257?via%3Dihub)\n-   [Gap Statistic Method](http://www.web.stanford.edu/~hastie/Papers/gap.pdf)\n\n#### Gap Statistic Method\n\nThe [**gap statistic**](http://www.web.stanford.edu/~hastie/Papers/gap.pdf) compares the total within intra-cluster variation for different values of k with their expected values under null reference distribution of the data. The estimate of the optimal clusters will be value that maximize the gap statistic (i.e., that yields the largest gap statistic). This means that the clustering structure is far away from the random uniform distribution of points.\n\nTo compute the gap statistic, [*clusGap()*](https://www.rdocumentation.org/packages/cluster/versions/2.1.0/topics/clusGap) of [**cluster**](https://cran.r-project.org/web/packages/cluster/index.html) package will be used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(12345)\ngap_stat <- clusGap(shan_ict, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n# Print the result\nprint(gap_stat, method = \"firstmax\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = shan_ict, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --> Number of clusters (method 'firstmax'): 1\n          logW   E.logW       gap     SE.sim\n [1,] 8.407129 8.680794 0.2736651 0.04460994\n [2,] 8.130029 8.350712 0.2206824 0.03880130\n [3,] 7.992265 8.202550 0.2102844 0.03362652\n [4,] 7.862224 8.080655 0.2184311 0.03784781\n [5,] 7.756461 7.978022 0.2215615 0.03897071\n [6,] 7.665594 7.887777 0.2221833 0.03973087\n [7,] 7.590919 7.806333 0.2154145 0.04054939\n [8,] 7.526680 7.731619 0.2049390 0.04198644\n [9,] 7.458024 7.660795 0.2027705 0.04421874\n[10,] 7.377412 7.593858 0.2164465 0.04540947\n```\n\n\n:::\n:::\n\n\nAlso note that the [*hcut*](https://rpkgs.datanovia.com/factoextra/reference/hcut.html) function used is from [**factoextra**](https://rpkgs.datanovia.com/factoextra/index.html) package.\n\nNext, we can visualise the plot by using [*fviz_gap_stat()*](https://rpkgs.datanovia.com/factoextra/reference/fviz_nbclust.html) of [**factoextra**](https://rpkgs.datanovia.com/factoextra/index.html) package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_gap_stat(gap_stat)\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\nWith reference to the gap statistic graph above, the recommended number of cluster to retain is 1. However, it is not logical to retain only one cluster. By examine the gap statistic graph, the 6-cluster gives the largest gap statistic and should be the next best cluster to pick.\n\n**Note:** In addition to these commonly used approaches, the [NbClust](https://cran.r-project.org/web/packages/NbClust/) package, published by Charrad et al., 2014, provides 30 indices for determining the relevant number of clusters and proposes to users the best clustering scheme from the different results obtained by varying all combinations of number of clusters, distance measures, and clustering methods.\n\n### Interpreting the dendrograms\n\nIn the dendrogram displayed above, each leaf corresponds to one observation. As we move up the tree, observations that are similar to each other are combined into branches, which are themselves fused at a higher height.\n\nThe height of the fusion, provided on the vertical axis, indicates the (dis)similarity between two observations. The higher the height of the fusion, the less similar the observations are. Note that, conclusions about the proximity of two observations can be drawn only based on the height where branches containing those two observations first are fused. We cannot use the proximity of two observations along the horizontal axis as a criteria of their similarity.\n\nIt's also possible to draw the dendrogram with a border around the selected clusters by using [*rect.hclust()*](https://stat.ethz.ch/R-manual/R-devel/library/stats/html/rect.hclust.html) of R stats. The argument *border* is used to specify the border colors for the rectangles.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = 6, \n            border = 2:5)\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-37-1.png){width=960}\n:::\n:::\n\n\n### Visually-driven hierarchical clustering analysis\n\nIn this section, we will learn how to perform visually-driven hiearchical clustering analysis by using [*heatmaply*](https://cran.r-project.org/web/packages/heatmaply/index.html) package.\n\nWith **heatmaply**, we are able to build both highly interactive cluster heatmap or static cluster heatmap.\n\n#### Transforming the data frame into a matrix\n\nThe data was loaded into a data frame, but it has to be a data matrix to make your heatmap.\n\nThe code chunk below will be used to transform *shan_ict* data frame into a data matrix.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_ict_mat <- data.matrix(shan_ict)\n```\n:::\n\n\n#### Plotting interactive cluster heatmap using *heatmaply()*\n\nIn the code chunk below, the [*heatmaply()*](https://talgalili.github.io/heatmaply/reference/heatmaply.html) of [heatmaply](https://talgalili.github.io/heatmaply/index.html) package is used to build an interactive cluster heatmap.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheatmaply(normalize(shan_ict_mat),\n          Colv=NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Blues,\n          k_row = 6,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"Geographic Segmentation of Shan State by ICT indicators\",\n          xlab = \"ICT Indicators\",\n          ylab = \"Townships of Shan State\"\n          )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-f547fdd7f7cb17180a7c\" style=\"width:100%;height:487px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f547fdd7f7cb17180a7c\">{\"x\":{\"data\":[{\"x\":[1,2,3,4,5],\"y\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],\"z\":[[0.11697828280235656,0.12946800291670141,0.22051676674466952,0.3846139992017637,0],[0.1190714713575737,0.34509307535574651,0.14668071862261856,0.6891560112923748,0.030692309450180394],[0.44811294912657396,0.55225992411450087,0.10521568760008111,0.57412901426752871,0.48480739277474305],[0.39472652438726058,0.64647733866993595,0.19477119473094032,0.39801608135750716,0.30703392330347096],[0.40973860994388683,0.66778546258182536,0.20593962805229063,0.48078425480385861,0.3104572004100466],[0.56035905060769442,0.68216005320191508,0.21982898000630299,0.53271772917722882,0.29569694938338714],[0.50978351840105807,0.70584966248141379,0.23527761552998847,0.5657288162191596,0.18421714232785746],[0.44536782610845499,0.64847518658958281,0.4007253744967556,0.52572958435168671,0.32572766162209832],[0.30300632404660205,0.49147219082742094,0.39341363429136933,0.4349886836765729,0.25539117902522024],[0.28546056562312339,0.65316773418946461,0.3511299776298073,0.32190336940009312,0.2746837227301171],[0.18689649559375604,0.47362168694479917,0.17754710976751636,0.21901799211937109,0.21923803903390374],[0.2629488857600436,0.60093442055127599,0.10558868166123289,0.30984472139571101,0.32244406175045998],[0.34838456904687842,0.55041330721869519,0.013213311777657203,0.33060051526022322,0.28050502634682223],[0.37211615170496537,0.37496862114224933,0.12506080462855637,0.36350286192371328,0.20828663725058608],[0.38204908464317522,0.49529324375134881,0.16528121425607512,0.33285202942113173,0.12691106039033156],[0.3980907579303854,0.46773404772860855,0.16525192608338107,0.24827221676312536,0.12566331521633783],[0.46367507181173728,0.48027348971210537,0.049517603601854712,0.27845401411719362,0.10224025627189308],[0.45439139601376666,0.58594353490077877,0.14417252910969927,0.30481757278969496,0.11764114434607099],[0.57205942216261241,0.60302857970223533,0.18200927177224016,0.32084610041574091,0.099653220995087832],[0.64202483918062014,0.57786439014823898,0.20733874544122771,0.2552581189664615,0.17607405769543419],[0.46963701986480177,0.49275331606036005,0.33640390671869069,0.32646328563512589,0.19964300270472207],[0.47243757577103734,0.70830658131680169,0.18152892689938518,0.098196451325406497,0.18683697450666384],[0.48702182505931929,0.53618454590948406,0.16236928492310002,0.15547460469197441,0.074496310341376867],[0.53416314399345055,0.45576055674496141,0.10954853696695577,0.076155538926932026,0.10692577185093441],[0.43759029682306855,0.46420446143708183,0.11087478745786902,0.09844037585740166,0.0985978869506665],[0.45263667579662742,0.37779761401029388,0.11365549681498791,0.087769700588719066,0.064068575228978811],[0.31801152018301909,0.34169331569611694,0.098223180852338707,0.14121340016110578,0.068453570303467604],[0.3039056264611843,0.29573466001141135,0.12216142202890717,0.22079722888776726,0.09335763735596643],[0.12583937793228897,0.27166586954277672,0.14691293402953898,0.11190443691659302,0.040120375229698704],[0.16481813869170034,0.16307059912065375,0,0,0.050562923174397992],[0.29277803105512323,0,0.018020667308862742,0.020514689816836292,0.057341960293267435],[0.37385748377862454,0.099529007645666662,0.029599900644770458,0.026290069687093631,0.0041124401409408148],[0.48130384213362665,0.14229750653679712,0.031665051478322846,0.01257306399846167,0.030854020566575963],[1,0.19895816942596367,0.051234029774627314,0.11997847269980252,0.012754780873524383],[0.8553147780718825,0.53558029529267848,0.09544043782343907,0.18021510896887397,0.107759971325446],[0.78980219430668397,0.70746355636330893,0.16078708461582927,0.40650165146089307,0.20745103892822123],[0.65302227298916715,0.60351827743629827,0.090757204809061548,0.45032057879694432,0.13928686759144926],[0.70831666585604436,0.59451431070864036,0.19959920412341628,0.41000871240744075,0.14010534490572477],[0.82848163458094792,0.53309615033103497,0.22225304485480443,0.49414581896158,0.24532142669874679],[0.92441487443451942,0.81570663014131473,0.39155140729005755,0.50956182689641516,0.14779989677341526],[0.55458208226657446,0.85789929032177503,0.66700796483691616,0.41150185475720735,0.13518667681882074],[0.2176339803587421,0.65209843040106041,1,0.28778828469233325,0.19643775155383097],[0,0.23543567048956013,0.9321013544580421,0.40101556902451291,0.084421792656946576],[0.10937492963625832,0.6239421797955409,0.6220506320938376,0.6188729942182486,0.10736975492138895],[0.21361370528846507,0.54598018129684645,0.46285806565679205,0.55588313631466169,0.089979971244948997],[0.22989746208303394,0.60680342034724111,0.44188018109426463,0.64558140267074604,0.23838778070406411],[0.2458248117567654,0.73986922857984383,0.49811595358599009,0.80123060000032609,0.30165891030396325],[0.069496745754494604,0.91187904567993305,0.73626364575085579,0.97326830696953925,0.3621726080619882],[0.13189010662422904,0.76691504545610334,0.47117405530992845,0.74203095277732434,0.66556801662669474],[0.1648296584979817,0.51521670119868113,0.33457025472725271,0.57855734181793805,0.5290330349458493],[0.53176358126123557,0.71817785309851512,0.33811911213704343,0.64506885812542725,0.49665992351864235],[0.46321400984145478,0.77736794201940895,0.35759948327266128,0.61146312565581429,0.63887304429100666],[0.7427814502261707,0.87988241582281557,0.44075599890374501,0.78717895265256577,0.87397863437784384],[0.73856184642802991,0.88560203867754661,0.31880165558342549,1,1],[0.33405948053815493,1,0.76534529857384681,0.96780866955997513,0.98756611073781364]],\"text\":[[\"row: Narphan<br>column: RADIO_PR<br>value: 0.116978\",\"row: Narphan<br>column: TV_PR<br>value: 0.129468\",\"row: Narphan<br>column: LLPHONE_PR<br>value: 0.220517\",\"row: Narphan<br>column: MPHONE_PR<br>value: 0.384614\",\"row: Narphan<br>column: COMPUTER_PR<br>value: 0.000000\"],[\"row: Pangwaun<br>column: RADIO_PR<br>value: 0.119071\",\"row: Pangwaun<br>column: TV_PR<br>value: 0.345093\",\"row: Pangwaun<br>column: LLPHONE_PR<br>value: 0.146681\",\"row: Pangwaun<br>column: MPHONE_PR<br>value: 0.689156\",\"row: Pangwaun<br>column: COMPUTER_PR<br>value: 0.030692\"],[\"row: Mongpan<br>column: RADIO_PR<br>value: 0.448113\",\"row: Mongpan<br>column: TV_PR<br>value: 0.552260\",\"row: Mongpan<br>column: LLPHONE_PR<br>value: 0.105216\",\"row: Mongpan<br>column: MPHONE_PR<br>value: 0.574129\",\"row: Mongpan<br>column: COMPUTER_PR<br>value: 0.484807\"],[\"row: Nansang<br>column: RADIO_PR<br>value: 0.394727\",\"row: Nansang<br>column: TV_PR<br>value: 0.646477\",\"row: Nansang<br>column: LLPHONE_PR<br>value: 0.194771\",\"row: Nansang<br>column: MPHONE_PR<br>value: 0.398016\",\"row: Nansang<br>column: COMPUTER_PR<br>value: 0.307034\"],[\"row: Kyaukme<br>column: RADIO_PR<br>value: 0.409739\",\"row: Kyaukme<br>column: TV_PR<br>value: 0.667785\",\"row: Kyaukme<br>column: LLPHONE_PR<br>value: 0.205940\",\"row: Kyaukme<br>column: MPHONE_PR<br>value: 0.480784\",\"row: Kyaukme<br>column: COMPUTER_PR<br>value: 0.310457\"],[\"row: Kalaw<br>column: RADIO_PR<br>value: 0.560359\",\"row: Kalaw<br>column: TV_PR<br>value: 0.682160\",\"row: Kalaw<br>column: LLPHONE_PR<br>value: 0.219829\",\"row: Kalaw<br>column: MPHONE_PR<br>value: 0.532718\",\"row: Kalaw<br>column: COMPUTER_PR<br>value: 0.295697\"],[\"row: Hseni<br>column: RADIO_PR<br>value: 0.509784\",\"row: Hseni<br>column: TV_PR<br>value: 0.705850\",\"row: Hseni<br>column: LLPHONE_PR<br>value: 0.235278\",\"row: Hseni<br>column: MPHONE_PR<br>value: 0.565729\",\"row: Hseni<br>column: COMPUTER_PR<br>value: 0.184217\"],[\"row: Langkho<br>column: RADIO_PR<br>value: 0.445368\",\"row: Langkho<br>column: TV_PR<br>value: 0.648475\",\"row: Langkho<br>column: LLPHONE_PR<br>value: 0.400725\",\"row: Langkho<br>column: MPHONE_PR<br>value: 0.525730\",\"row: Langkho<br>column: COMPUTER_PR<br>value: 0.325728\"],[\"row: Kunhing<br>column: RADIO_PR<br>value: 0.303006\",\"row: Kunhing<br>column: TV_PR<br>value: 0.491472\",\"row: Kunhing<br>column: LLPHONE_PR<br>value: 0.393414\",\"row: Kunhing<br>column: MPHONE_PR<br>value: 0.434989\",\"row: Kunhing<br>column: COMPUTER_PR<br>value: 0.255391\"],[\"row: Laihka<br>column: RADIO_PR<br>value: 0.285461\",\"row: Laihka<br>column: TV_PR<br>value: 0.653168\",\"row: Laihka<br>column: LLPHONE_PR<br>value: 0.351130\",\"row: Laihka<br>column: MPHONE_PR<br>value: 0.321903\",\"row: Laihka<br>column: COMPUTER_PR<br>value: 0.274684\"],[\"row: Monghsat<br>column: RADIO_PR<br>value: 0.186896\",\"row: Monghsat<br>column: TV_PR<br>value: 0.473622\",\"row: Monghsat<br>column: LLPHONE_PR<br>value: 0.177547\",\"row: Monghsat<br>column: MPHONE_PR<br>value: 0.219018\",\"row: Monghsat<br>column: COMPUTER_PR<br>value: 0.219238\"],[\"row: Loilen<br>column: RADIO_PR<br>value: 0.262949\",\"row: Loilen<br>column: TV_PR<br>value: 0.600934\",\"row: Loilen<br>column: LLPHONE_PR<br>value: 0.105589\",\"row: Loilen<br>column: MPHONE_PR<br>value: 0.309845\",\"row: Loilen<br>column: COMPUTER_PR<br>value: 0.322444\"],[\"row: Mongnai<br>column: RADIO_PR<br>value: 0.348385\",\"row: Mongnai<br>column: TV_PR<br>value: 0.550413\",\"row: Mongnai<br>column: LLPHONE_PR<br>value: 0.013213\",\"row: Mongnai<br>column: MPHONE_PR<br>value: 0.330601\",\"row: Mongnai<br>column: COMPUTER_PR<br>value: 0.280505\"],[\"row: Mongton<br>column: RADIO_PR<br>value: 0.372116\",\"row: Mongton<br>column: TV_PR<br>value: 0.374969\",\"row: Mongton<br>column: LLPHONE_PR<br>value: 0.125061\",\"row: Mongton<br>column: MPHONE_PR<br>value: 0.363503\",\"row: Mongton<br>column: COMPUTER_PR<br>value: 0.208287\"],[\"row: Hsipaw<br>column: RADIO_PR<br>value: 0.382049\",\"row: Hsipaw<br>column: TV_PR<br>value: 0.495293\",\"row: Hsipaw<br>column: LLPHONE_PR<br>value: 0.165281\",\"row: Hsipaw<br>column: MPHONE_PR<br>value: 0.332852\",\"row: Hsipaw<br>column: COMPUTER_PR<br>value: 0.126911\"],[\"row: Hopong<br>column: RADIO_PR<br>value: 0.398091\",\"row: Hopong<br>column: TV_PR<br>value: 0.467734\",\"row: Hopong<br>column: LLPHONE_PR<br>value: 0.165252\",\"row: Hopong<br>column: MPHONE_PR<br>value: 0.248272\",\"row: Hopong<br>column: COMPUTER_PR<br>value: 0.125663\"],[\"row: Monghsu<br>column: RADIO_PR<br>value: 0.463675\",\"row: Monghsu<br>column: TV_PR<br>value: 0.480273\",\"row: Monghsu<br>column: LLPHONE_PR<br>value: 0.049518\",\"row: Monghsu<br>column: MPHONE_PR<br>value: 0.278454\",\"row: Monghsu<br>column: COMPUTER_PR<br>value: 0.102240\"],[\"row: Pinlaung<br>column: RADIO_PR<br>value: 0.454391\",\"row: Pinlaung<br>column: TV_PR<br>value: 0.585944\",\"row: Pinlaung<br>column: LLPHONE_PR<br>value: 0.144173\",\"row: Pinlaung<br>column: MPHONE_PR<br>value: 0.304818\",\"row: Pinlaung<br>column: COMPUTER_PR<br>value: 0.117641\"],[\"row: Mongmit<br>column: RADIO_PR<br>value: 0.572059\",\"row: Mongmit<br>column: TV_PR<br>value: 0.603029\",\"row: Mongmit<br>column: LLPHONE_PR<br>value: 0.182009\",\"row: Mongmit<br>column: MPHONE_PR<br>value: 0.320846\",\"row: Mongmit<br>column: COMPUTER_PR<br>value: 0.099653\"],[\"row: Pekon<br>column: RADIO_PR<br>value: 0.642025\",\"row: Pekon<br>column: TV_PR<br>value: 0.577864\",\"row: Pekon<br>column: LLPHONE_PR<br>value: 0.207339\",\"row: Pekon<br>column: MPHONE_PR<br>value: 0.255258\",\"row: Pekon<br>column: COMPUTER_PR<br>value: 0.176074\"],[\"row: Kutkai<br>column: RADIO_PR<br>value: 0.469637\",\"row: Kutkai<br>column: TV_PR<br>value: 0.492753\",\"row: Kutkai<br>column: LLPHONE_PR<br>value: 0.336404\",\"row: Kutkai<br>column: MPHONE_PR<br>value: 0.326463\",\"row: Kutkai<br>column: COMPUTER_PR<br>value: 0.199643\"],[\"row: Namtu<br>column: RADIO_PR<br>value: 0.472438\",\"row: Namtu<br>column: TV_PR<br>value: 0.708307\",\"row: Namtu<br>column: LLPHONE_PR<br>value: 0.181529\",\"row: Namtu<br>column: MPHONE_PR<br>value: 0.098196\",\"row: Namtu<br>column: COMPUTER_PR<br>value: 0.186837\"],[\"row: Hsihseng<br>column: RADIO_PR<br>value: 0.487022\",\"row: Hsihseng<br>column: TV_PR<br>value: 0.536185\",\"row: Hsihseng<br>column: LLPHONE_PR<br>value: 0.162369\",\"row: Hsihseng<br>column: MPHONE_PR<br>value: 0.155475\",\"row: Hsihseng<br>column: COMPUTER_PR<br>value: 0.074496\"],[\"row: Kyethi<br>column: RADIO_PR<br>value: 0.534163\",\"row: Kyethi<br>column: TV_PR<br>value: 0.455761\",\"row: Kyethi<br>column: LLPHONE_PR<br>value: 0.109549\",\"row: Kyethi<br>column: MPHONE_PR<br>value: 0.076156\",\"row: Kyethi<br>column: COMPUTER_PR<br>value: 0.106926\"],[\"row: Tangyan<br>column: RADIO_PR<br>value: 0.437590\",\"row: Tangyan<br>column: TV_PR<br>value: 0.464204\",\"row: Tangyan<br>column: LLPHONE_PR<br>value: 0.110875\",\"row: Tangyan<br>column: MPHONE_PR<br>value: 0.098440\",\"row: Tangyan<br>column: COMPUTER_PR<br>value: 0.098598\"],[\"row: Namhsan<br>column: RADIO_PR<br>value: 0.452637\",\"row: Namhsan<br>column: TV_PR<br>value: 0.377798\",\"row: Namhsan<br>column: LLPHONE_PR<br>value: 0.113655\",\"row: Namhsan<br>column: MPHONE_PR<br>value: 0.087770\",\"row: Namhsan<br>column: COMPUTER_PR<br>value: 0.064069\"],[\"row: Mongyai<br>column: RADIO_PR<br>value: 0.318012\",\"row: Mongyai<br>column: TV_PR<br>value: 0.341693\",\"row: Mongyai<br>column: LLPHONE_PR<br>value: 0.098223\",\"row: Mongyai<br>column: MPHONE_PR<br>value: 0.141213\",\"row: Mongyai<br>column: COMPUTER_PR<br>value: 0.068454\"],[\"row: Mongping<br>column: RADIO_PR<br>value: 0.303906\",\"row: Mongping<br>column: TV_PR<br>value: 0.295735\",\"row: Mongping<br>column: LLPHONE_PR<br>value: 0.122161\",\"row: Mongping<br>column: MPHONE_PR<br>value: 0.220797\",\"row: Mongping<br>column: COMPUTER_PR<br>value: 0.093358\"],[\"row: Mongkhet<br>column: RADIO_PR<br>value: 0.125839\",\"row: Mongkhet<br>column: TV_PR<br>value: 0.271666\",\"row: Mongkhet<br>column: LLPHONE_PR<br>value: 0.146913\",\"row: Mongkhet<br>column: MPHONE_PR<br>value: 0.111904\",\"row: Mongkhet<br>column: COMPUTER_PR<br>value: 0.040120\"],[\"row: Mawkmai<br>column: RADIO_PR<br>value: 0.164818\",\"row: Mawkmai<br>column: TV_PR<br>value: 0.163071\",\"row: Mawkmai<br>column: LLPHONE_PR<br>value: 0.000000\",\"row: Mawkmai<br>column: MPHONE_PR<br>value: 0.000000\",\"row: Mawkmai<br>column: COMPUTER_PR<br>value: 0.050563\"],[\"row: Mongkaing<br>column: RADIO_PR<br>value: 0.292778\",\"row: Mongkaing<br>column: TV_PR<br>value: 0.000000\",\"row: Mongkaing<br>column: LLPHONE_PR<br>value: 0.018021\",\"row: Mongkaing<br>column: MPHONE_PR<br>value: 0.020515\",\"row: Mongkaing<br>column: COMPUTER_PR<br>value: 0.057342\"],[\"row: Manton<br>column: RADIO_PR<br>value: 0.373857\",\"row: Manton<br>column: TV_PR<br>value: 0.099529\",\"row: Manton<br>column: LLPHONE_PR<br>value: 0.029600\",\"row: Manton<br>column: MPHONE_PR<br>value: 0.026290\",\"row: Manton<br>column: COMPUTER_PR<br>value: 0.004112\"],[\"row: Matman<br>column: RADIO_PR<br>value: 0.481304\",\"row: Matman<br>column: TV_PR<br>value: 0.142298\",\"row: Matman<br>column: LLPHONE_PR<br>value: 0.031665\",\"row: Matman<br>column: MPHONE_PR<br>value: 0.012573\",\"row: Matman<br>column: COMPUTER_PR<br>value: 0.030854\"],[\"row: Ywangan<br>column: RADIO_PR<br>value: 1.000000\",\"row: Ywangan<br>column: TV_PR<br>value: 0.198958\",\"row: Ywangan<br>column: LLPHONE_PR<br>value: 0.051234\",\"row: Ywangan<br>column: MPHONE_PR<br>value: 0.119978\",\"row: Ywangan<br>column: COMPUTER_PR<br>value: 0.012755\"],[\"row: Pindaya<br>column: RADIO_PR<br>value: 0.855315\",\"row: Pindaya<br>column: TV_PR<br>value: 0.535580\",\"row: Pindaya<br>column: LLPHONE_PR<br>value: 0.095440\",\"row: Pindaya<br>column: MPHONE_PR<br>value: 0.180215\",\"row: Pindaya<br>column: COMPUTER_PR<br>value: 0.107760\"],[\"row: Lawksawk<br>column: RADIO_PR<br>value: 0.789802\",\"row: Lawksawk<br>column: TV_PR<br>value: 0.707464\",\"row: Lawksawk<br>column: LLPHONE_PR<br>value: 0.160787\",\"row: Lawksawk<br>column: MPHONE_PR<br>value: 0.406502\",\"row: Lawksawk<br>column: COMPUTER_PR<br>value: 0.207451\"],[\"row: Nyaungshwe<br>column: RADIO_PR<br>value: 0.653022\",\"row: Nyaungshwe<br>column: TV_PR<br>value: 0.603518\",\"row: Nyaungshwe<br>column: LLPHONE_PR<br>value: 0.090757\",\"row: Nyaungshwe<br>column: MPHONE_PR<br>value: 0.450321\",\"row: Nyaungshwe<br>column: COMPUTER_PR<br>value: 0.139287\"],[\"row: Nawnghkio<br>column: RADIO_PR<br>value: 0.708317\",\"row: Nawnghkio<br>column: TV_PR<br>value: 0.594514\",\"row: Nawnghkio<br>column: LLPHONE_PR<br>value: 0.199599\",\"row: Nawnghkio<br>column: MPHONE_PR<br>value: 0.410009\",\"row: Nawnghkio<br>column: COMPUTER_PR<br>value: 0.140105\"],[\"row: Monghpyak<br>column: RADIO_PR<br>value: 0.828482\",\"row: Monghpyak<br>column: TV_PR<br>value: 0.533096\",\"row: Monghpyak<br>column: LLPHONE_PR<br>value: 0.222253\",\"row: Monghpyak<br>column: MPHONE_PR<br>value: 0.494146\",\"row: Monghpyak<br>column: COMPUTER_PR<br>value: 0.245321\"],[\"row: Mabein<br>column: RADIO_PR<br>value: 0.924415\",\"row: Mabein<br>column: TV_PR<br>value: 0.815707\",\"row: Mabein<br>column: LLPHONE_PR<br>value: 0.391551\",\"row: Mabein<br>column: MPHONE_PR<br>value: 0.509562\",\"row: Mabein<br>column: COMPUTER_PR<br>value: 0.147800\"],[\"row: Mongyawng<br>column: RADIO_PR<br>value: 0.554582\",\"row: Mongyawng<br>column: TV_PR<br>value: 0.857899\",\"row: Mongyawng<br>column: LLPHONE_PR<br>value: 0.667008\",\"row: Mongyawng<br>column: MPHONE_PR<br>value: 0.411502\",\"row: Mongyawng<br>column: COMPUTER_PR<br>value: 0.135187\"],[\"row: Kunlong<br>column: RADIO_PR<br>value: 0.217634\",\"row: Kunlong<br>column: TV_PR<br>value: 0.652098\",\"row: Kunlong<br>column: LLPHONE_PR<br>value: 1.000000\",\"row: Kunlong<br>column: MPHONE_PR<br>value: 0.287788\",\"row: Kunlong<br>column: COMPUTER_PR<br>value: 0.196438\"],[\"row: Konkyan<br>column: RADIO_PR<br>value: 0.000000\",\"row: Konkyan<br>column: TV_PR<br>value: 0.235436\",\"row: Konkyan<br>column: LLPHONE_PR<br>value: 0.932101\",\"row: Konkyan<br>column: MPHONE_PR<br>value: 0.401016\",\"row: Konkyan<br>column: COMPUTER_PR<br>value: 0.084422\"],[\"row: Mongyang<br>column: RADIO_PR<br>value: 0.109375\",\"row: Mongyang<br>column: TV_PR<br>value: 0.623942\",\"row: Mongyang<br>column: LLPHONE_PR<br>value: 0.622051\",\"row: Mongyang<br>column: MPHONE_PR<br>value: 0.618873\",\"row: Mongyang<br>column: COMPUTER_PR<br>value: 0.107370\"],[\"row: Mongmao<br>column: RADIO_PR<br>value: 0.213614\",\"row: Mongmao<br>column: TV_PR<br>value: 0.545980\",\"row: Mongmao<br>column: LLPHONE_PR<br>value: 0.462858\",\"row: Mongmao<br>column: MPHONE_PR<br>value: 0.555883\",\"row: Mongmao<br>column: COMPUTER_PR<br>value: 0.089980\"],[\"row: Hopang<br>column: RADIO_PR<br>value: 0.229897\",\"row: Hopang<br>column: TV_PR<br>value: 0.606803\",\"row: Hopang<br>column: LLPHONE_PR<br>value: 0.441880\",\"row: Hopang<br>column: MPHONE_PR<br>value: 0.645581\",\"row: Hopang<br>column: COMPUTER_PR<br>value: 0.238388\"],[\"row: Namhkan<br>column: RADIO_PR<br>value: 0.245825\",\"row: Namhkan<br>column: TV_PR<br>value: 0.739869\",\"row: Namhkan<br>column: LLPHONE_PR<br>value: 0.498116\",\"row: Namhkan<br>column: MPHONE_PR<br>value: 0.801231\",\"row: Namhkan<br>column: COMPUTER_PR<br>value: 0.301659\"],[\"row: Laukkaing<br>column: RADIO_PR<br>value: 0.069497\",\"row: Laukkaing<br>column: TV_PR<br>value: 0.911879\",\"row: Laukkaing<br>column: LLPHONE_PR<br>value: 0.736264\",\"row: Laukkaing<br>column: MPHONE_PR<br>value: 0.973268\",\"row: Laukkaing<br>column: COMPUTER_PR<br>value: 0.362173\"],[\"row: Mongla<br>column: RADIO_PR<br>value: 0.131890\",\"row: Mongla<br>column: TV_PR<br>value: 0.766915\",\"row: Mongla<br>column: LLPHONE_PR<br>value: 0.471174\",\"row: Mongla<br>column: MPHONE_PR<br>value: 0.742031\",\"row: Mongla<br>column: COMPUTER_PR<br>value: 0.665568\"],[\"row: Pangsang<br>column: RADIO_PR<br>value: 0.164830\",\"row: Pangsang<br>column: TV_PR<br>value: 0.515217\",\"row: Pangsang<br>column: LLPHONE_PR<br>value: 0.334570\",\"row: Pangsang<br>column: MPHONE_PR<br>value: 0.578557\",\"row: Pangsang<br>column: COMPUTER_PR<br>value: 0.529033\"],[\"row: Kengtung<br>column: RADIO_PR<br>value: 0.531764\",\"row: Kengtung<br>column: TV_PR<br>value: 0.718178\",\"row: Kengtung<br>column: LLPHONE_PR<br>value: 0.338119\",\"row: Kengtung<br>column: MPHONE_PR<br>value: 0.645069\",\"row: Kengtung<br>column: COMPUTER_PR<br>value: 0.496660\"],[\"row: Lashio<br>column: RADIO_PR<br>value: 0.463214\",\"row: Lashio<br>column: TV_PR<br>value: 0.777368\",\"row: Lashio<br>column: LLPHONE_PR<br>value: 0.357599\",\"row: Lashio<br>column: MPHONE_PR<br>value: 0.611463\",\"row: Lashio<br>column: COMPUTER_PR<br>value: 0.638873\"],[\"row: Taunggyi<br>column: RADIO_PR<br>value: 0.742781\",\"row: Taunggyi<br>column: TV_PR<br>value: 0.879882\",\"row: Taunggyi<br>column: LLPHONE_PR<br>value: 0.440756\",\"row: Taunggyi<br>column: MPHONE_PR<br>value: 0.787179\",\"row: Taunggyi<br>column: COMPUTER_PR<br>value: 0.873979\"],[\"row: Tachileik<br>column: RADIO_PR<br>value: 0.738562\",\"row: Tachileik<br>column: TV_PR<br>value: 0.885602\",\"row: Tachileik<br>column: LLPHONE_PR<br>value: 0.318802\",\"row: Tachileik<br>column: MPHONE_PR<br>value: 1.000000\",\"row: Tachileik<br>column: COMPUTER_PR<br>value: 1.000000\"],[\"row: Muse<br>column: RADIO_PR<br>value: 0.334059\",\"row: Muse<br>column: TV_PR<br>value: 1.000000\",\"row: Muse<br>column: LLPHONE_PR<br>value: 0.765345\",\"row: Muse<br>column: MPHONE_PR<br>value: 0.967809\",\"row: Muse<br>column: COMPUTER_PR<br>value: 0.987566\"]],\"colorscale\":[[0,\"#F7FBFF\"],[0.0041124401409408148,\"#F6FAFE\"],[0.01257306399846167,\"#F4F9FE\"],[0.012754780873524383,\"#F4F9FE\"],[0.013213311777657203,\"#F4F9FE\"],[0.018020667308862742,\"#F3F8FD\"],[0.020514689816836292,\"#F3F8FD\"],[0.026290069687093631,\"#F1F7FD\"],[0.029599900644770458,\"#F0F6FC\"],[0.030692309450180394,\"#F0F6FC\"],[0.030854020566575963,\"#F0F6FC\"],[0.031665051478322846,\"#F0F6FC\"],[0.040120375229698704,\"#EFF5FC\"],[0.049517603601854712,\"#ECF4FB\"],[0.050562923174397992,\"#ECF4FB\"],[0.051234029774627314,\"#ECF4FB\"],[0.057341960293267435,\"#EBF3FB\"],[0.064068575228978811,\"#EAF2FA\"],[0.068453570303467604,\"#E9F2FA\"],[0.069496745754494604,\"#E8F1FA\"],[0.074496310341376867,\"#E8F1FA\"],[0.076155538926932026,\"#E8F1FA\"],[0.084421792656946576,\"#E5EFF9\"],[0.087769700588719066,\"#E5EFF9\"],[0.089979971244948997,\"#E4EFF9\"],[0.090757204809061548,\"#E4EFF9\"],[0.09335763735596643,\"#E4EEF8\"],[0.09544043782343907,\"#E4EEF8\"],[0.098196451325406497,\"#E3EEF8\"],[0.098223180852338707,\"#E3EEF8\"],[0.09844037585740166,\"#E3EEF8\"],[0.0985978869506665,\"#E3EEF8\"],[0.099529007645666662,\"#E3EEF8\"],[0.099653220995087832,\"#E3EEF8\"],[0.10224025627189308,\"#E2EDF8\"],[0.10521568760008111,\"#E1EDF8\"],[0.10558868166123289,\"#E1EDF8\"],[0.10692577185093441,\"#E1EDF8\"],[0.10736975492138895,\"#E1EDF8\"],[0.107759971325446,\"#E1EDF8\"],[0.10937492963625832,\"#E1ECF7\"],[0.10954853696695577,\"#E1ECF7\"],[0.11087478745786902,\"#E1ECF7\"],[0.11190443691659302,\"#E0ECF7\"],[0.11365549681498791,\"#E0ECF7\"],[0.11697828280235656,\"#DFEBF7\"],[0.11764114434607099,\"#DFEBF7\"],[0.1190714713575737,\"#DFEBF7\"],[0.11997847269980252,\"#DEEBF7\"],[0.12216142202890717,\"#DEEBF7\"],[0.12506080462855637,\"#DDEAF6\"],[0.12566331521633783,\"#DDEAF6\"],[0.12583937793228897,\"#DDEAF6\"],[0.12691106039033156,\"#DDEAF6\"],[0.12946800291670141,\"#DDEAF6\"],[0.13189010662422904,\"#DCE9F6\"],[0.13518667681882074,\"#DCE9F6\"],[0.13928686759144926,\"#DAE8F5\"],[0.14010534490572477,\"#DAE8F5\"],[0.14121340016110578,\"#DAE8F5\"],[0.14229750653679712,\"#DAE8F5\"],[0.14417252910969927,\"#DAE8F5\"],[0.14668071862261856,\"#DAE8F5\"],[0.14691293402953898,\"#DAE8F5\"],[0.14779989677341526,\"#D9E7F5\"],[0.15547460469197441,\"#D7E6F4\"],[0.16078708461582927,\"#D7E6F4\"],[0.16236928492310002,\"#D7E6F4\"],[0.16307059912065375,\"#D6E5F4\"],[0.16481813869170034,\"#D6E5F4\"],[0.1648296584979817,\"#D6E5F4\"],[0.16525192608338107,\"#D6E5F4\"],[0.16528121425607512,\"#D6E5F4\"],[0.17607405769543419,\"#D4E4F3\"],[0.17754710976751636,\"#D4E4F3\"],[0.18021510896887397,\"#D3E3F3\"],[0.18152892689938518,\"#D3E3F3\"],[0.18200927177224016,\"#D3E3F3\"],[0.18421714232785746,\"#D2E3F3\"],[0.18683697450666384,\"#D1E2F2\"],[0.18689649559375604,\"#D1E2F2\"],[0.19477119473094032,\"#D0E1F2\"],[0.19643775155383097,\"#D0E1F2\"],[0.19895816942596367,\"#CFE1F2\"],[0.19959920412341628,\"#CFE1F2\"],[0.19964300270472207,\"#CFE1F2\"],[0.20593962805229063,\"#CEE0F1\"],[0.20733874544122771,\"#CEE0F1\"],[0.20745103892822123,\"#CEE0F1\"],[0.20828663725058608,\"#CEE0F1\"],[0.21361370528846507,\"#CDDFF1\"],[0.2176339803587421,\"#CCDFF1\"],[0.21901799211937109,\"#CBDEF0\"],[0.21923803903390374,\"#CBDEF0\"],[0.21982898000630299,\"#CBDEF0\"],[0.22051676674466952,\"#CBDEF0\"],[0.22079722888776726,\"#CBDEF0\"],[0.22225304485480443,\"#CBDEF0\"],[0.22989746208303394,\"#C9DDF0\"],[0.23527761552998847,\"#C8DCEF\"],[0.23543567048956013,\"#C8DCEF\"],[0.23838778070406411,\"#C8DCEF\"],[0.24532142669874679,\"#C6DBEF\"],[0.2458248117567654,\"#C6DBEF\"],[0.24827221676312536,\"#C6DBEF\"],[0.2552581189664615,\"#C4DAEE\"],[0.25539117902522024,\"#C4DAEE\"],[0.2629488857600436,\"#C1D9ED\"],[0.27166586954277672,\"#BFD8EC\"],[0.2746837227301171,\"#BED7EC\"],[0.27845401411719362,\"#BCD7EB\"],[0.28050502634682223,\"#BBD6EB\"],[0.28546056562312339,\"#BAD6EA\"],[0.28778828469233325,\"#BAD6EA\"],[0.29277803105512323,\"#B8D4EA\"],[0.29569694938338714,\"#B7D4EA\"],[0.29573466001141135,\"#B7D4EA\"],[0.30165891030396325,\"#B5D3E9\"],[0.30300632404660205,\"#B5D3E9\"],[0.3039056264611843,\"#B5D3E9\"],[0.30481757278969496,\"#B4D3E8\"],[0.30703392330347096,\"#B3D3E8\"],[0.30984472139571101,\"#B2D2E8\"],[0.3104572004100466,\"#B2D2E8\"],[0.31801152018301909,\"#B0D1E7\"],[0.31880165558342549,\"#B0D1E7\"],[0.32084610041574091,\"#AFD1E6\"],[0.32190336940009312,\"#AFD1E6\"],[0.32244406175045998,\"#AFD1E6\"],[0.32572766162209832,\"#ADD0E6\"],[0.32646328563512589,\"#ADD0E6\"],[0.33060051526022322,\"#ACD0E6\"],[0.33285202942113173,\"#ABCFE5\"],[0.33405948053815493,\"#ABCFE5\"],[0.33457025472725271,\"#ABCFE5\"],[0.33640390671869069,\"#AACFE5\"],[0.33811911213704343,\"#AACFE5\"],[0.34169331569611694,\"#A8CEE4\"],[0.34509307535574651,\"#A7CEE4\"],[0.34838456904687842,\"#A6CDE3\"],[0.3511299776298073,\"#A5CDE3\"],[0.35759948327266128,\"#A3CCE3\"],[0.3621726080619882,\"#A2CBE2\"],[0.36350286192371328,\"#A1CBE2\"],[0.37211615170496537,\"#9ECAE1\"],[0.37385748377862454,\"#9ECAE1\"],[0.37496862114224933,\"#9DC9E0\"],[0.37779761401029388,\"#9CC9E0\"],[0.38204908464317522,\"#9BC8E0\"],[0.3846139992017637,\"#9AC7E0\"],[0.39155140729005755,\"#97C6DF\"],[0.39341363429136933,\"#96C6DF\"],[0.39472652438726058,\"#96C5DF\"],[0.39801608135750716,\"#94C5DF\"],[0.3980907579303854,\"#94C4DE\"],[0.4007253744967556,\"#93C4DE\"],[0.40101556902451291,\"#93C4DE\"],[0.40650165146089307,\"#91C2DE\"],[0.40973860994388683,\"#90C2DE\"],[0.41000871240744075,\"#8FC1DD\"],[0.41150185475720735,\"#8FC1DD\"],[0.4349886836765729,\"#85BCDB\"],[0.43759029682306855,\"#84BBDB\"],[0.44075599890374501,\"#83BBDB\"],[0.44188018109426463,\"#82BADB\"],[0.44536782610845499,\"#81B9DA\"],[0.44811294912657396,\"#80B9DA\"],[0.45032057879694432,\"#7FB8DA\"],[0.45263667579662742,\"#7EB8DA\"],[0.45439139601376666,\"#7DB8D9\"],[0.45576055674496141,\"#7DB8D9\"],[0.46285806565679205,\"#7AB6D9\"],[0.46321400984145478,\"#7AB6D9\"],[0.46367507181173728,\"#7AB6D9\"],[0.46420446143708183,\"#79B6D9\"],[0.46773404772860855,\"#78B5D8\"],[0.46963701986480177,\"#77B4D8\"],[0.47117405530992845,\"#77B4D8\"],[0.47243757577103734,\"#76B4D8\"],[0.47362168694479917,\"#75B3D8\"],[0.48027348971210537,\"#73B2D7\"],[0.48078425480385861,\"#72B1D7\"],[0.48130384213362665,\"#72B1D7\"],[0.48480739277474305,\"#71B1D7\"],[0.48702182505931929,\"#70B1D7\"],[0.49147219082742094,\"#6EB0D6\"],[0.49275331606036005,\"#6EAFD6\"],[0.49414581896158,\"#6DAFD6\"],[0.49529324375134881,\"#6CAFD6\"],[0.49665992351864235,\"#6CAED6\"],[0.49811595358599009,\"#6BAED6\"],[0.50956182689641516,\"#67ABD4\"],[0.50978351840105807,\"#67ABD4\"],[0.51521670119868113,\"#66AAD4\"],[0.52572958435168671,\"#62A8D2\"],[0.5290330349458493,\"#61A7D2\"],[0.53176358126123557,\"#60A6D1\"],[0.53271772917722882,\"#60A6D1\"],[0.53309615033103497,\"#60A6D1\"],[0.53416314399345055,\"#60A6D1\"],[0.53558029529267848,\"#5FA5D1\"],[0.53618454590948406,\"#5FA5D1\"],[0.54598018129684645,\"#5CA3D0\"],[0.55041330721869519,\"#5AA3CF\"],[0.55225992411450087,\"#59A2CF\"],[0.55458208226657446,\"#59A2CF\"],[0.55588313631466169,\"#58A1CE\"],[0.56035905060769442,\"#57A0CE\"],[0.5657288162191596,\"#559FCD\"],[0.57205942216261241,\"#539DCC\"],[0.57412901426752871,\"#529DCC\"],[0.57786439014823898,\"#519CCC\"],[0.57855734181793805,\"#509BCB\"],[0.58594353490077877,\"#4F9BCB\"],[0.59451431070864036,\"#4B98C9\"],[0.60093442055127599,\"#4A97C9\"],[0.60302857970223533,\"#4896C8\"],[0.60351827743629827,\"#4896C8\"],[0.60680342034724111,\"#4795C8\"],[0.61146312565581429,\"#4694C7\"],[0.6188729942182486,\"#4393C6\"],[0.6220506320938376,\"#4292C6\"],[0.6239421797955409,\"#4292C6\"],[0.63887304429100666,\"#3E8EC4\"],[0.64202483918062014,\"#3D8DC3\"],[0.64506885812542725,\"#3D8DC3\"],[0.64558140267074604,\"#3C8CC3\"],[0.64647733866993595,\"#3C8CC3\"],[0.64847518658958281,\"#3C8CC3\"],[0.65209843040106041,\"#3B8BC2\"],[0.65302227298916715,\"#3A8AC1\"],[0.65316773418946461,\"#3A8AC1\"],[0.66556801662669474,\"#3787C0\"],[0.66700796483691616,\"#3787C0\"],[0.66778546258182536,\"#3686C0\"],[0.68216005320191508,\"#3282BE\"],[0.6891560112923748,\"#3080BD\"],[0.70584966248141379,\"#2C7CBB\"],[0.70746355636330893,\"#2C7CBB\"],[0.70830658131680169,\"#2B7BBA\"],[0.70831666585604436,\"#2B7BBA\"],[0.71817785309851512,\"#2979B9\"],[0.73626364575085579,\"#2474B6\"],[0.73856184642802991,\"#2474B6\"],[0.73986922857984383,\"#2373B6\"],[0.74203095277732434,\"#2373B6\"],[0.7427814502261707,\"#2373B6\"],[0.76534529857384681,\"#1E6DB2\"],[0.76691504545610334,\"#1D6CB1\"],[0.77736794201940895,\"#1B6AAF\"],[0.78717895265256577,\"#1967AD\"],[0.78980219430668397,\"#1967AD\"],[0.80123060000032609,\"#1664AB\"],[0.81570663014131473,\"#1360A7\"],[0.82848163458094792,\"#115DA5\"],[0.8553147780718825,\"#0C56A0\"],[0.85789929032177503,\"#0B559F\"],[0.87397863437784384,\"#08519C\"],[0.87988241582281557,\"#08509A\"],[0.88560203867754661,\"#084E97\"],[0.91187904567993305,\"#08468D\"],[0.92441487443451942,\"#084388\"],[0.9321013544580421,\"#084185\"],[0.96780866955997513,\"#083877\"],[0.97326830696953925,\"#083775\"],[0.98756611073781364,\"#08336F\"],[1,\"#08306B\"]],\"type\":\"heatmap\",\"showscale\":false,\"autocolorscale\":false,\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1],\"y\":[1],\"name\":\"f6800aefb6971c64525ddbccc2f60b48\",\"type\":\"scatter\",\"mode\":\"markers\",\"opacity\":0,\"hoverinfo\":\"skip\",\"showlegend\":false,\"marker\":{\"color\":[0,1],\"colorscale\":[[0,\"#F7FBFF\"],[0.0033444816053511705,\"#F6FAFE\"],[0.006688963210702341,\"#F5F9FE\"],[0.010033444816053512,\"#F4F9FE\"],[0.013377926421404682,\"#F4F9FE\"],[0.016722408026755852,\"#F3F8FD\"],[0.020066889632107024,\"#F3F8FD\"],[0.023411371237458192,\"#F2F7FD\"],[0.026755852842809364,\"#F1F7FD\"],[0.030100334448160536,\"#F0F6FC\"],[0.033444816053511704,\"#EFF6FC\"],[0.036789297658862873,\"#EFF6FC\"],[0.040133779264214048,\"#EFF5FC\"],[0.043478260869565216,\"#EEF5FC\"],[0.046822742474916385,\"#EDF4FB\"],[0.05016722408026756,\"#ECF4FB\"],[0.053511705685618728,\"#ECF3FB\"],[0.056856187290969896,\"#ECF3FB\"],[0.060200668896321072,\"#EBF3FB\"],[0.06354515050167224,\"#EAF2FA\"],[0.066889632107023408,\"#E9F2FA\"],[0.070234113712374577,\"#E8F1FA\"],[0.073578595317725745,\"#E8F1FA\"],[0.076923076923076927,\"#E7F0F9\"],[0.080267558528428096,\"#E7F0F9\"],[0.083612040133779264,\"#E6F0F9\"],[0.086956521739130432,\"#E5EFF9\"],[0.090301003344481601,\"#E4EFF9\"],[0.093645484949832769,\"#E4EEF8\"],[0.096989966555183951,\"#E3EEF8\"],[0.10033444816053512,\"#E2EDF8\"],[0.10367892976588629,\"#E2EDF8\"],[0.10702341137123746,\"#E1EDF8\"],[0.11036789297658862,\"#E1ECF7\"],[0.11371237458193979,\"#E0ECF7\"],[0.11705685618729096,\"#DFEBF7\"],[0.12040133779264214,\"#DEEBF7\"],[0.12374581939799331,\"#DDEAF6\"],[0.12709030100334448,\"#DDEAF6\"],[0.13043478260869565,\"#DDEAF6\"],[0.13377926421404682,\"#DCE9F6\"],[0.13712374581939799,\"#DBE9F6\"],[0.14046822742474915,\"#DAE8F5\"],[0.14381270903010032,\"#DAE8F5\"],[0.14715719063545149,\"#D9E7F5\"],[0.15050167224080269,\"#D9E7F5\"],[0.15384615384615385,\"#D8E7F5\"],[0.15719063545150502,\"#D7E6F4\"],[0.16053511705685619,\"#D7E6F4\"],[0.16387959866220736,\"#D6E5F4\"],[0.16722408026755853,\"#D5E5F4\"],[0.1705685618729097,\"#D5E5F4\"],[0.17391304347826086,\"#D4E4F3\"],[0.17725752508361203,\"#D4E4F3\"],[0.1806020066889632,\"#D3E3F3\"],[0.18394648829431437,\"#D2E3F3\"],[0.18729096989966554,\"#D1E2F2\"],[0.19063545150501671,\"#D1E2F2\"],[0.1939799331103679,\"#D1E2F2\"],[0.19732441471571907,\"#D0E1F2\"],[0.20066889632107024,\"#CFE1F2\"],[0.20401337792642141,\"#CEE0F1\"],[0.20735785953177258,\"#CEE0F1\"],[0.21070234113712374,\"#CDDFF1\"],[0.21404682274247491,\"#CCDFF1\"],[0.21739130434782608,\"#CCDFF1\"],[0.22073578595317725,\"#CBDEF0\"],[0.22408026755852842,\"#CBDEF0\"],[0.22742474916387959,\"#CADDF0\"],[0.23076923076923075,\"#C9DDF0\"],[0.23411371237458192,\"#C8DCEF\"],[0.23745819397993312,\"#C8DCEF\"],[0.24080267558528429,\"#C8DCEF\"],[0.24414715719063546,\"#C7DBEF\"],[0.24749163879598662,\"#C6DBEF\"],[0.25083612040133779,\"#C5DAEE\"],[0.25418060200668896,\"#C4DAEE\"],[0.25752508361204013,\"#C3D9EE\"],[0.2608695652173913,\"#C2D9ED\"],[0.26421404682274247,\"#C1D9ED\"],[0.26755852842809363,\"#C0D8ED\"],[0.2709030100334448,\"#BFD8EC\"],[0.27424749163879597,\"#BED7EC\"],[0.27759197324414714,\"#BCD7EB\"],[0.28093645484949831,\"#BBD6EB\"],[0.28428093645484948,\"#BBD6EB\"],[0.28762541806020064,\"#BAD6EA\"],[0.29096989966555181,\"#B9D5EA\"],[0.29431438127090298,\"#B7D4EA\"],[0.29765886287625415,\"#B6D4E9\"],[0.30100334448160537,\"#B5D3E9\"],[0.30434782608695654,\"#B4D3E8\"],[0.30769230769230771,\"#B3D3E8\"],[0.31103678929765888,\"#B2D2E8\"],[0.31438127090301005,\"#B1D2E7\"],[0.31772575250836121,\"#B0D1E7\"],[0.32107023411371238,\"#AFD1E6\"],[0.32441471571906355,\"#AED0E6\"],[0.32775919732441472,\"#ACD0E6\"],[0.33110367892976589,\"#ACD0E6\"],[0.33444816053511706,\"#ABCFE5\"],[0.33779264214046822,\"#AACFE5\"],[0.34113712374581939,\"#A8CEE4\"],[0.34448160535117056,\"#A7CEE4\"],[0.34782608695652173,\"#A6CDE3\"],[0.3511705685618729,\"#A5CDE3\"],[0.35451505016722407,\"#A4CDE3\"],[0.35785953177257523,\"#A3CCE3\"],[0.3612040133779264,\"#A2CBE2\"],[0.36454849498327757,\"#A1CBE2\"],[0.36789297658862874,\"#A0CAE1\"],[0.37123745819397991,\"#9FCAE1\"],[0.37458193979933108,\"#9DC9E0\"],[0.37792642140468224,\"#9CC9E0\"],[0.38127090301003341,\"#9BC8E0\"],[0.38461538461538458,\"#9AC7E0\"],[0.38795986622073581,\"#98C7DF\"],[0.39130434782608697,\"#97C6DF\"],[0.39464882943143814,\"#96C5DF\"],[0.39799331103678931,\"#94C5DF\"],[0.40133779264214048,\"#93C4DE\"],[0.40468227424749165,\"#92C3DE\"],[0.40802675585284282,\"#90C2DE\"],[0.41137123745819398,\"#8FC1DD\"],[0.41471571906354515,\"#8DC0DD\"],[0.41806020066889632,\"#8CC0DD\"],[0.42140468227424749,\"#8BC0DD\"],[0.42474916387959866,\"#89BFDC\"],[0.42809364548494983,\"#88BEDC\"],[0.43143812709030099,\"#87BDDC\"],[0.43478260869565216,\"#85BCDB\"],[0.43812709030100333,\"#84BBDB\"],[0.4414715719063545,\"#82BADB\"],[0.44481605351170567,\"#81BADB\"],[0.44816053511705684,\"#80B9DA\"],[0.451505016722408,\"#7FB8DA\"],[0.45484949832775917,\"#7DB8D9\"],[0.45819397993311034,\"#7BB7D9\"],[0.46153846153846151,\"#7AB6D9\"],[0.46488294314381268,\"#79B5D8\"],[0.46822742474916385,\"#78B5D8\"],[0.47157190635451507,\"#77B4D8\"],[0.47491638795986624,\"#75B3D8\"],[0.47826086956521741,\"#73B2D7\"],[0.48160535117056857,\"#72B1D7\"],[0.48494983277591974,\"#71B1D7\"],[0.48829431438127091,\"#6FB0D6\"],[0.49163879598662208,\"#6EB0D6\"],[0.49498327759197325,\"#6DAFD6\"],[0.49832775919732442,\"#6BAED6\"],[0.50167224080267558,\"#6AADD5\"],[0.50501672240802675,\"#69ACD5\"],[0.50836120401337792,\"#68ABD4\"],[0.51170568561872909,\"#67ABD4\"],[0.51505016722408026,\"#66AAD4\"],[0.51839464882943143,\"#65AAD3\"],[0.52173913043478259,\"#63A9D3\"],[0.52508361204013376,\"#62A8D2\"],[0.52842809364548493,\"#61A7D2\"],[0.5317725752508361,\"#60A6D1\"],[0.53511705685618727,\"#5FA6D1\"],[0.53846153846153844,\"#5EA5D1\"],[0.5418060200668896,\"#5DA4D0\"],[0.54515050167224077,\"#5CA3D0\"],[0.54849498327759194,\"#5AA3CF\"],[0.55183946488294311,\"#59A2CF\"],[0.55518394648829428,\"#58A1CE\"],[0.55852842809364545,\"#58A1CE\"],[0.56187290969899661,\"#56A0CE\"],[0.56521739130434778,\"#559FCD\"],[0.56856187290969895,\"#549ECD\"],[0.57190635451505012,\"#539DCC\"],[0.57525083612040129,\"#529CCC\"],[0.57859531772575246,\"#509BCB\"],[0.58193979933110362,\"#509BCB\"],[0.58528428093645479,\"#4F9BCB\"],[0.58862876254180596,\"#4E9ACA\"],[0.59197324414715713,\"#4C99CA\"],[0.5953177257525083,\"#4B98C9\"],[0.59866220735785947,\"#4A97C9\"],[0.60200668896321075,\"#4996C8\"],[0.60535117056856191,\"#4896C8\"],[0.60869565217391308,\"#4795C8\"],[0.61204013377926425,\"#4694C7\"],[0.61538461538461542,\"#4594C7\"],[0.61872909698996659,\"#4393C6\"],[0.62207357859531776,\"#4292C6\"],[0.62541806020066892,\"#4292C6\"],[0.62876254180602009,\"#4191C5\"],[0.63210702341137126,\"#4090C5\"],[0.63545150501672243,\"#3F8FC4\"],[0.6387959866220736,\"#3E8EC4\"],[0.64214046822742477,\"#3D8DC3\"],[0.64548494983277593,\"#3C8CC3\"],[0.6488294314381271,\"#3C8CC3\"],[0.65217391304347827,\"#3B8BC2\"],[0.65551839464882944,\"#3A8AC1\"],[0.65886287625418061,\"#3989C1\"],[0.66220735785953178,\"#3888C0\"],[0.66555183946488294,\"#3787C0\"],[0.66889632107023411,\"#3686BF\"],[0.67224080267558528,\"#3585BF\"],[0.67558528428093645,\"#3484BF\"],[0.67892976588628762,\"#3383BE\"],[0.68227424749163879,\"#3282BE\"],[0.68561872909698995,\"#3181BD\"],[0.68896321070234112,\"#3080BD\"],[0.69230769230769229,\"#2F7FBC\"],[0.69565217391304346,\"#2F7FBC\"],[0.69899665551839463,\"#2E7EBC\"],[0.7023411371237458,\"#2D7DBB\"],[0.70568561872909696,\"#2C7CBB\"],[0.70903010033444813,\"#2B7BBA\"],[0.7123745819397993,\"#2A7AB9\"],[0.71571906354515047,\"#2979B9\"],[0.71906354515050164,\"#2979B9\"],[0.72240802675585281,\"#2878B8\"],[0.72575250836120397,\"#2777B8\"],[0.72909698996655514,\"#2676B7\"],[0.73244147157190631,\"#2575B7\"],[0.73578595317725748,\"#2474B6\"],[0.73913043478260865,\"#2474B6\"],[0.74247491638795982,\"#2373B6\"],[0.74581939799331098,\"#2272B5\"],[0.74916387959866215,\"#2171B5\"],[0.75250836120401332,\"#2070B4\"],[0.75585284280936449,\"#1F6FB3\"],[0.75919732441471566,\"#1E6EB2\"],[0.76254180602006683,\"#1E6EB2\"],[0.76588628762541799,\"#1E6DB2\"],[0.76923076923076916,\"#1D6CB1\"],[0.77257525083612044,\"#1C6BB0\"],[0.77591973244147161,\"#1B6AAF\"],[0.77926421404682278,\"#1A69AE\"],[0.78260869565217395,\"#1A68AE\"],[0.78595317725752512,\"#1A68AE\"],[0.78929765886287628,\"#1967AD\"],[0.79264214046822745,\"#1866AC\"],[0.79598662207357862,\"#1765AB\"],[0.79933110367892979,\"#1664AB\"],[0.80267558528428096,\"#1663AA\"],[0.80602006688963213,\"#1562A9\"],[0.80936454849498329,\"#1562A9\"],[0.81270903010033446,\"#1461A8\"],[0.81605351170568563,\"#1360A7\"],[0.8193979933110368,\"#135FA7\"],[0.82274247491638797,\"#125EA6\"],[0.82608695652173914,\"#115DA5\"],[0.8294314381270903,\"#105CA4\"],[0.83277591973244147,\"#105CA4\"],[0.83612040133779264,\"#0F5BA3\"],[0.83946488294314381,\"#0F5AA3\"],[0.84280936454849498,\"#0E59A2\"],[0.84615384615384615,\"#0D58A1\"],[0.84949832775919731,\"#0C57A0\"],[0.85284280936454848,\"#0C57A0\"],[0.85618729096989965,\"#0C56A0\"],[0.85953177257525082,\"#0B559F\"],[0.86287625418060199,\"#0A549E\"],[0.86622073578595316,\"#09539D\"],[0.86956521739130432,\"#08529C\"],[0.87290969899665549,\"#08519C\"],[0.87625418060200666,\"#08519B\"],[0.87959866220735783,\"#08509A\"],[0.882943143812709,\"#084F99\"],[0.88628762541806017,\"#084E97\"],[0.88963210702341133,\"#084C96\"],[0.8929765886287625,\"#084B95\"],[0.89632107023411367,\"#084A93\"],[0.89966555183946484,\"#084A92\"],[0.90301003344481601,\"#084990\"],[0.90635451505016718,\"#08488F\"],[0.90969899665551834,\"#08478E\"],[0.91304347826086951,\"#08468C\"],[0.91638795986622068,\"#08458B\"],[0.91973244147157185,\"#08448A\"],[0.92307692307692302,\"#084489\"],[0.92642140468227419,\"#084388\"],[0.92976588628762535,\"#084286\"],[0.93311036789297652,\"#084185\"],[0.93645484949832769,\"#084083\"],[0.93979933110367886,\"#083F82\"],[0.94314381270903014,\"#083E81\"],[0.94648829431438131,\"#083E7F\"],[0.94983277591973247,\"#083D7E\"],[0.95317725752508364,\"#083C7D\"],[0.95652173913043481,\"#083B7B\"],[0.95986622073578598,\"#083A7A\"],[0.96321070234113715,\"#083979\"],[0.96655518394648832,\"#083978\"],[0.96989966555183948,\"#083876\"],[0.97324414715719065,\"#083775\"],[0.97658862876254182,\"#083674\"],[0.97993311036789299,\"#083572\"],[0.98327759197324416,\"#083471\"],[0.98662207357859533,\"#083370\"],[0.98996655518394649,\"#08336F\"],[0.99331103678929766,\"#08326D\"],[0.99665551839464883,\"#08316C\"],[1,\"#08306B\"]],\"colorbar\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"thickness\":23.040000000000003,\"title\":null,\"titlefont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"tickmode\":\"array\",\"ticktext\":[\"0.00\",\"0.25\",\"0.50\",\"0.75\",\"1.00\"],\"tickvals\":[0.0016666666666666668,0.2508333333333333,0.49999999999999994,0.74916666666666665,0.99833333333333329],\"tickfont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"ticklen\":2,\"len\":0.5}},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[1.0908778897590077,1.0908778897590077,null,1.0908778897590077,0.50094972196331145,null,0.50094972196331145,0.50094972196331145,null,0.50094972196331145,0,null,0.50094972196331145,0.50094972196331145,null,0.50094972196331145,0],\"y\":[45.609375,42.5,null,42.5,42.5,null,42.5,42,null,42,42,null,42.5,43,null,43,43],\"text\":[\"y: 1.09087789\",\"y: 1.09087789\",null,\"y: 1.09087789\",\"y: 1.09087789\",null,\"y: 0.50094972\",\"y: 0.50094972\",null,\"y: 0.50094972\",\"y: 0.50094972\",null,\"y: 0.50094972\",\"y: 0.50094972\",null,\"y: 0.50094972\",\"y: 0.50094972\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.2677165354330708,\"color\":\"rgba(57,190,177,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1.0908778897590077,1.0908778897590077,null,1.0908778897590077,0.73180022212606388,null,0.73180022212606388,0.73180022212606388,null,0.73180022212606388,0.69115953326908108,null,0.69115953326908108,0.69115953326908108,null,0.69115953326908108,0.3806270981887479,null,0.3806270981887479,0.3806270981887479,null,0.3806270981887479,0.2552643168918356,null,0.2552643168918356,0.2552643168918356,null,0.2552643168918356,0,null,0.2552643168918356,0.2552643168918356,null,0.2552643168918356,0.185675404080306,null,0.185675404080306,0.185675404080306,null,0.185675404080306,0,null,0.185675404080306,0.185675404080306,null,0.185675404080306,0,null,0.3806270981887479,0.3806270981887479,null,0.3806270981887479,0,null,0.69115953326908108,0.69115953326908108,null,0.69115953326908108,0,null,0.73180022212606388,0.73180022212606388,null,0.73180022212606388,0.4668075826896933,null,0.4668075826896933,0.4668075826896933,null,0.4668075826896933,0.35841748229668219,null,0.35841748229668219,0.35841748229668219,null,0.35841748229668219,0,null,0.35841748229668219,0.35841748229668219,null,0.35841748229668219,0,null,0.4668075826896933,0.4668075826896933,null,0.4668075826896933,0.1730199763105828,null,0.1730199763105828,0.1730199763105828,null,0.1730199763105828,0,null,0.1730199763105828,0.1730199763105828,null,0.1730199763105828,0],\"y\":[45.609375,48.71875,null,48.71875,48.71875,null,48.71875,46.9375,null,46.9375,46.9375,null,46.9375,45.875,null,45.875,45.875,null,45.875,44.75,null,44.75,44.75,null,44.75,44,null,44,44,null,44.75,45.5,null,45.5,45.5,null,45.5,45,null,45,45,null,45.5,46,null,46,46,null,45.875,47,null,47,47,null,46.9375,48,null,48,48,null,48.71875,50.5,null,50.5,50.5,null,50.5,49.5,null,49.5,49.5,null,49.5,49,null,49,49,null,49.5,50,null,50,50,null,50.5,51.5,null,51.5,51.5,null,51.5,51,null,51,51,null,51.5,52,null,52,52],\"text\":[\"y: 1.09087789\",\"y: 1.09087789\",null,\"y: 1.09087789\",\"y: 1.09087789\",null,\"y: 0.73180022\",\"y: 0.73180022\",null,\"y: 0.73180022\",\"y: 0.73180022\",null,\"y: 0.69115953\",\"y: 0.69115953\",null,\"y: 0.69115953\",\"y: 0.69115953\",null,\"y: 0.38062710\",\"y: 0.38062710\",null,\"y: 0.38062710\",\"y: 0.38062710\",null,\"y: 0.25526432\",\"y: 0.25526432\",null,\"y: 0.25526432\",\"y: 0.25526432\",null,\"y: 0.25526432\",\"y: 0.25526432\",null,\"y: 0.25526432\",\"y: 0.25526432\",null,\"y: 0.18567540\",\"y: 0.18567540\",null,\"y: 0.18567540\",\"y: 0.18567540\",null,\"y: 0.18567540\",\"y: 0.18567540\",null,\"y: 0.18567540\",\"y: 0.18567540\",null,\"y: 0.38062710\",\"y: 0.38062710\",null,\"y: 0.38062710\",\"y: 0.38062710\",null,\"y: 0.69115953\",\"y: 0.69115953\",null,\"y: 0.69115953\",\"y: 0.69115953\",null,\"y: 0.73180022\",\"y: 0.73180022\",null,\"y: 0.73180022\",\"y: 0.73180022\",null,\"y: 0.46680758\",\"y: 0.46680758\",null,\"y: 0.46680758\",\"y: 0.46680758\",null,\"y: 0.35841748\",\"y: 0.35841748\",null,\"y: 0.35841748\",\"y: 0.35841748\",null,\"y: 0.35841748\",\"y: 0.35841748\",null,\"y: 0.35841748\",\"y: 0.35841748\",null,\"y: 0.46680758\",\"y: 0.46680758\",null,\"y: 0.46680758\",\"y: 0.46680758\",null,\"y: 0.17301998\",\"y: 0.17301998\",null,\"y: 0.17301998\",\"y: 0.17301998\",null,\"y: 0.17301998\",\"y: 0.17301998\",null,\"y: 0.17301998\",\"y: 0.17301998\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.2677165354330708,\"color\":\"rgba(125,176,221,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1.054397227224376,1.054397227224376,null,1.054397227224376,0.47350573521866995,null,0.47350573521866995,0.47350573521866995,null,0.47350573521866995,0,null,0.47350573521866995,0.47350573521866995,null,0.47350573521866995,0],\"y\":[37.859375,40.5,null,40.5,40.5,null,40.5,40,null,40,40,null,40.5,41,null,41,41],\"text\":[\"y: 1.05439723\",\"y: 1.05439723\",null,\"y: 1.05439723\",\"y: 1.05439723\",null,\"y: 0.47350574\",\"y: 0.47350574\",null,\"y: 0.47350574\",\"y: 0.47350574\",null,\"y: 0.47350574\",\"y: 0.47350574\",null,\"y: 0.47350574\",\"y: 0.47350574\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.2677165354330708,\"color\":\"rgba(134,184,117,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1.054397227224376,1.054397227224376,null,1.054397227224376,0.65936703189914236,null,0.65936703189914236,0.65936703189914236,null,0.65936703189914236,0,null,0.65936703189914236,0.65936703189914236,null,0.65936703189914236,0.3664468181726131,null,0.3664468181726131,0.3664468181726131,null,0.3664468181726131,0,null,0.3664468181726131,0.3664468181726131,null,0.3664468181726131,0.25729438180055098,null,0.25729438180055098,0.25729438180055098,null,0.25729438180055098,0.20244506563386871,null,0.20244506563386871,0.20244506563386871,null,0.20244506563386871,0,null,0.20244506563386871,0.20244506563386871,null,0.20244506563386871,0.12888304229422309,null,0.12888304229422309,0.12888304229422309,null,0.12888304229422309,0,null,0.12888304229422309,0.12888304229422309,null,0.12888304229422309,0,null,0.25729438180055098,0.25729438180055098,null,0.25729438180055098,0],\"y\":[37.859375,35.21875,null,35.21875,35.21875,null,35.21875,34,null,34,34,null,35.21875,36.4375,null,36.4375,36.4375,null,36.4375,35,null,35,35,null,36.4375,37.875,null,37.875,37.875,null,37.875,36.75,null,36.75,36.75,null,36.75,36,null,36,36,null,36.75,37.5,null,37.5,37.5,null,37.5,37,null,37,37,null,37.5,38,null,38,38,null,37.875,39,null,39,39],\"text\":[\"y: 1.05439723\",\"y: 1.05439723\",null,\"y: 1.05439723\",\"y: 1.05439723\",null,\"y: 0.65936703\",\"y: 0.65936703\",null,\"y: 0.65936703\",\"y: 0.65936703\",null,\"y: 0.65936703\",\"y: 0.65936703\",null,\"y: 0.65936703\",\"y: 0.65936703\",null,\"y: 0.36644682\",\"y: 0.36644682\",null,\"y: 0.36644682\",\"y: 0.36644682\",null,\"y: 0.36644682\",\"y: 0.36644682\",null,\"y: 0.36644682\",\"y: 0.36644682\",null,\"y: 0.25729438\",\"y: 0.25729438\",null,\"y: 0.25729438\",\"y: 0.25729438\",null,\"y: 0.20244507\",\"y: 0.20244507\",null,\"y: 0.20244507\",\"y: 0.20244507\",null,\"y: 0.20244507\",\"y: 0.20244507\",null,\"y: 0.20244507\",\"y: 0.20244507\",null,\"y: 0.12888304\",\"y: 0.12888304\",null,\"y: 0.12888304\",\"y: 0.12888304\",null,\"y: 0.12888304\",\"y: 0.12888304\",null,\"y: 0.12888304\",\"y: 0.12888304\",null,\"y: 0.25729438\",\"y: 0.25729438\",null,\"y: 0.25729438\",\"y: 0.25729438\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.2677165354330708,\"color\":\"rgba(199,167,108,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1.5941744666987299,1.5941744666987299,null,1.5941744666987299,0.61424845626023339,null,0.61424845626023339,0.61424845626023339,null,0.61424845626023339,0.27585786880898649,null,0.27585786880898649,0.27585786880898649,null,0.27585786880898649,0,null,0.27585786880898649,0.27585786880898649,null,0.27585786880898649,0,null,0.61424845626023339,0.61424845626023339,null,0.61424845626023339,0],\"y\":[49.9296875,54.25,null,54.25,54.25,null,54.25,53.5,null,53.5,53.5,null,53.5,53,null,53,53,null,53.5,54,null,54,54,null,54.25,55,null,55,55],\"text\":[\"y: 1.59417447\",\"y: 1.59417447\",null,\"y: 1.59417447\",\"y: 1.59417447\",null,\"y: 0.61424846\",\"y: 0.61424846\",null,\"y: 0.61424846\",\"y: 0.61424846\",null,\"y: 0.27585787\",\"y: 0.27585787\",null,\"y: 0.27585787\",\"y: 0.27585787\",null,\"y: 0.27585787\",\"y: 0.27585787\",null,\"y: 0.27585787\",\"y: 0.27585787\",null,\"y: 0.61424846\",\"y: 0.61424846\",null,\"y: 0.61424846\",\"y: 0.61424846\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.2677165354330708,\"color\":\"rgba(205,153,216,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1.2046648341508377,1.2046648341508377,null,1.2046648341508377,0.95788286362070973,null,0.95788286362070973,0.95788286362070973,null,0.95788286362070973,0.79474550028479152,null,0.79474550028479152,0.79474550028479152,null,0.79474550028479152,0.38162569396273166,null,0.38162569396273166,0.38162569396273166,null,0.38162569396273166,0,null,0.38162569396273166,0.38162569396273166,null,0.38162569396273166,0,null,0.79474550028479152,0.79474550028479152,null,0.79474550028479152,0.6664047769347069,null,0.6664047769347069,0.6664047769347069,null,0.6664047769347069,0.36706162143987942,null,0.36706162143987942,0.36706162143987942,null,0.36706162143987942,0,null,0.36706162143987942,0.36706162143987942,null,0.36706162143987942,0.24828582661663648,null,0.24828582661663648,0.24828582661663648,null,0.24828582661663648,0.087558107117793896,null,0.087558107117793896,0.087558107117793896,null,0.087558107117793896,0,null,0.087558107117793896,0.087558107117793896,null,0.087558107117793896,0,null,0.24828582661663648,0.24828582661663648,null,0.24828582661663648,0.23756964971442937,null,0.23756964971442937,0.23756964971442937,null,0.23756964971442937,0.12990466363518882,null,0.12990466363518882,0.12990466363518882,null,0.12990466363518882,0,null,0.12990466363518882,0.12990466363518882,null,0.12990466363518882,0,null,0.23756964971442937,0.23756964971442937,null,0.23756964971442937,0,null,0.6664047769347069,0.6664047769347069,null,0.6664047769347069,0.53487511869044835,null,0.53487511869044835,0.53487511869044835,null,0.53487511869044835,0.43836359937083058,null,0.43836359937083058,0.43836359937083058,null,0.43836359937083058,0.20347407832470954,null,0.20347407832470954,0.20347407832470954,null,0.20347407832470954,0,null,0.20347407832470954,0.20347407832470954,null,0.20347407832470954,0,null,0.43836359937083058,0.43836359937083058,null,0.43836359937083058,0.33205918608658225,null,0.33205918608658225,0.33205918608658225,null,0.33205918608658225,0.27419929098840362,null,0.27419929098840362,0.27419929098840362,null,0.27419929098840362,0,null,0.27419929098840362,0.27419929098840362,null,0.27419929098840362,0.1434382567577874,null,0.1434382567577874,0.1434382567577874,null,0.1434382567577874,0,null,0.1434382567577874,0.1434382567577874,null,0.1434382567577874,0,null,0.33205918608658225,0.33205918608658225,null,0.33205918608658225,0.20894513119211036,null,0.20894513119211036,0.20894513119211036,null,0.20894513119211036,0,null,0.20894513119211036,0.20894513119211036,null,0.20894513119211036,0.15445841184345191,null,0.15445841184345191,0.15445841184345191,null,0.15445841184345191,0.09039992811033179,null,0.09039992811033179,0.09039992811033179,null,0.09039992811033179,0,null,0.09039992811033179,0.09039992811033179,null,0.09039992811033179,0,null,0.15445841184345191,0.15445841184345191,null,0.15445841184345191,0,null,0.53487511869044835,0.53487511869044835,null,0.53487511869044835,0.3721232755076867,null,0.3721232755076867,0.3721232755076867,null,0.3721232755076867,0.35032421362805982,null,0.35032421362805982,0.35032421362805982,null,0.35032421362805982,0.24340283886100486,null,0.24340283886100486,0.24340283886100486,null,0.24340283886100486,0.2124431624834609,null,0.2124431624834609,0.2124431624834609,null,0.2124431624834609,0.12708171116759615,null,0.12708171116759615,0.12708171116759615,null,0.12708171116759615,0,null,0.12708171116759615,0.12708171116759615,null,0.12708171116759615,0,null,0.2124431624834609,0.2124431624834609,null,0.2124431624834609,0,null,0.24340283886100486,0.24340283886100486,null,0.24340283886100486,0,null,0.35032421362805982,0.35032421362805982,null,0.35032421362805982,0,null,0.3721232755076867,0.3721232755076867,null,0.3721232755076867,0.18257733577118407,null,0.18257733577118407,0.18257733577118407,null,0.18257733577118407,0,null,0.18257733577118407,0.18257733577118407,null,0.18257733577118407,0.12129831255664315,null,0.12129831255664315,0.12129831255664315,null,0.12129831255664315,0,null,0.12129831255664315,0.12129831255664315,null,0.12129831255664315,0.094902085465199792,null,0.094902085465199792,0.094902085465199792,null,0.094902085465199792,0,null,0.094902085465199792,0.094902085465199792,null,0.094902085465199792,0,null,0.95788286362070973,0.95788286362070973,null,0.95788286362070973,0.40783062668695391,null,0.40783062668695391,0.40783062668695391,null,0.40783062668695391,0.21815448450140359,null,0.21815448450140359,0.21815448450140359,null,0.21815448450140359,0.099186753204319189,null,0.099186753204319189,0.099186753204319189,null,0.099186753204319189,0,null,0.099186753204319189,0.099186753204319189,null,0.099186753204319189,0,null,0.21815448450140359,0.21815448450140359,null,0.21815448450140359,0,null,0.40783062668695391,0.40783062668695391,null,0.40783062668695391,0.31959962472454068,null,0.31959962472454068,0.31959962472454068,null,0.31959962472454068,0.20918247212427829,null,0.20918247212427829,0.20918247212427829,null,0.20918247212427829,0,null,0.20918247212427829,0.20918247212427829,null,0.20918247212427829,0,null,0.31959962472454068,0.31959962472454068,null,0.31959962472454068,0.11950480173549577,null,0.11950480173549577,0.11950480173549577,null,0.11950480173549577,0,null,0.11950480173549577,0.11950480173549577,null,0.11950480173549577,0],\"y\":[27.923828125,17.98828125,null,17.98828125,17.98828125,null,17.98828125,6.1015625,null,6.1015625,6.1015625,null,6.1015625,1.5,null,1.5,1.5,null,1.5,1,null,1,1,null,1.5,2,null,2,2,null,6.1015625,10.703125,null,10.703125,10.703125,null,10.703125,4.4375,null,4.4375,4.4375,null,4.4375,3,null,3,3,null,4.4375,5.875,null,5.875,5.875,null,5.875,4.5,null,4.5,4.5,null,4.5,4,null,4,4,null,4.5,5,null,5,5,null,5.875,7.25,null,7.25,7.25,null,7.25,6.5,null,6.5,6.5,null,6.5,6,null,6,6,null,6.5,7,null,7,7,null,7.25,8,null,8,8,null,10.703125,16.96875,null,16.96875,16.96875,null,16.96875,11.46875,null,11.46875,11.46875,null,11.46875,9.5,null,9.5,9.5,null,9.5,9,null,9,9,null,9.5,10,null,10,10,null,11.46875,13.4375,null,13.4375,13.4375,null,13.4375,11.75,null,11.75,11.75,null,11.75,11,null,11,11,null,11.75,12.5,null,12.5,12.5,null,12.5,12,null,12,12,null,12.5,13,null,13,13,null,13.4375,15.125,null,15.125,15.125,null,15.125,14,null,14,14,null,15.125,16.25,null,16.25,16.25,null,16.25,15.5,null,15.5,15.5,null,15.5,15,null,15,15,null,15.5,16,null,16,16,null,16.25,17,null,17,17,null,16.96875,22.46875,null,22.46875,22.46875,null,22.46875,21.0625,null,21.0625,21.0625,null,21.0625,20.125,null,20.125,20.125,null,20.125,19.25,null,19.25,19.25,null,19.25,18.5,null,18.5,18.5,null,18.5,18,null,18,18,null,18.5,19,null,19,19,null,19.25,20,null,20,20,null,20.125,21,null,21,21,null,21.0625,22,null,22,22,null,22.46875,23.875,null,23.875,23.875,null,23.875,23,null,23,23,null,23.875,24.75,null,24.75,24.75,null,24.75,24,null,24,24,null,24.75,25.5,null,25.5,25.5,null,25.5,25,null,25,25,null,25.5,26,null,26,26,null,17.98828125,29.875,null,29.875,29.875,null,29.875,28.25,null,28.25,28.25,null,28.25,27.5,null,27.5,27.5,null,27.5,27,null,27,27,null,27.5,28,null,28,28,null,28.25,29,null,29,29,null,29.875,31.5,null,31.5,31.5,null,31.5,30.5,null,30.5,30.5,null,30.5,30,null,30,30,null,30.5,31,null,31,31,null,31.5,32.5,null,32.5,32.5,null,32.5,32,null,32,32,null,32.5,33,null,33,33],\"text\":[\"y: 1.20466483\",\"y: 1.20466483\",null,\"y: 1.20466483\",\"y: 1.20466483\",null,\"y: 0.95788286\",\"y: 0.95788286\",null,\"y: 0.95788286\",\"y: 0.95788286\",null,\"y: 0.79474550\",\"y: 0.79474550\",null,\"y: 0.79474550\",\"y: 0.79474550\",null,\"y: 0.38162569\",\"y: 0.38162569\",null,\"y: 0.38162569\",\"y: 0.38162569\",null,\"y: 0.38162569\",\"y: 0.38162569\",null,\"y: 0.38162569\",\"y: 0.38162569\",null,\"y: 0.79474550\",\"y: 0.79474550\",null,\"y: 0.79474550\",\"y: 0.79474550\",null,\"y: 0.66640478\",\"y: 0.66640478\",null,\"y: 0.66640478\",\"y: 0.66640478\",null,\"y: 0.36706162\",\"y: 0.36706162\",null,\"y: 0.36706162\",\"y: 0.36706162\",null,\"y: 0.36706162\",\"y: 0.36706162\",null,\"y: 0.36706162\",\"y: 0.36706162\",null,\"y: 0.24828583\",\"y: 0.24828583\",null,\"y: 0.24828583\",\"y: 0.24828583\",null,\"y: 0.08755811\",\"y: 0.08755811\",null,\"y: 0.08755811\",\"y: 0.08755811\",null,\"y: 0.08755811\",\"y: 0.08755811\",null,\"y: 0.08755811\",\"y: 0.08755811\",null,\"y: 0.24828583\",\"y: 0.24828583\",null,\"y: 0.24828583\",\"y: 0.24828583\",null,\"y: 0.23756965\",\"y: 0.23756965\",null,\"y: 0.23756965\",\"y: 0.23756965\",null,\"y: 0.12990466\",\"y: 0.12990466\",null,\"y: 0.12990466\",\"y: 0.12990466\",null,\"y: 0.12990466\",\"y: 0.12990466\",null,\"y: 0.12990466\",\"y: 0.12990466\",null,\"y: 0.23756965\",\"y: 0.23756965\",null,\"y: 0.23756965\",\"y: 0.23756965\",null,\"y: 0.66640478\",\"y: 0.66640478\",null,\"y: 0.66640478\",\"y: 0.66640478\",null,\"y: 0.53487512\",\"y: 0.53487512\",null,\"y: 0.53487512\",\"y: 0.53487512\",null,\"y: 0.43836360\",\"y: 0.43836360\",null,\"y: 0.43836360\",\"y: 0.43836360\",null,\"y: 0.20347408\",\"y: 0.20347408\",null,\"y: 0.20347408\",\"y: 0.20347408\",null,\"y: 0.20347408\",\"y: 0.20347408\",null,\"y: 0.20347408\",\"y: 0.20347408\",null,\"y: 0.43836360\",\"y: 0.43836360\",null,\"y: 0.43836360\",\"y: 0.43836360\",null,\"y: 0.33205919\",\"y: 0.33205919\",null,\"y: 0.33205919\",\"y: 0.33205919\",null,\"y: 0.27419929\",\"y: 0.27419929\",null,\"y: 0.27419929\",\"y: 0.27419929\",null,\"y: 0.27419929\",\"y: 0.27419929\",null,\"y: 0.27419929\",\"y: 0.27419929\",null,\"y: 0.14343826\",\"y: 0.14343826\",null,\"y: 0.14343826\",\"y: 0.14343826\",null,\"y: 0.14343826\",\"y: 0.14343826\",null,\"y: 0.14343826\",\"y: 0.14343826\",null,\"y: 0.33205919\",\"y: 0.33205919\",null,\"y: 0.33205919\",\"y: 0.33205919\",null,\"y: 0.20894513\",\"y: 0.20894513\",null,\"y: 0.20894513\",\"y: 0.20894513\",null,\"y: 0.20894513\",\"y: 0.20894513\",null,\"y: 0.20894513\",\"y: 0.20894513\",null,\"y: 0.15445841\",\"y: 0.15445841\",null,\"y: 0.15445841\",\"y: 0.15445841\",null,\"y: 0.09039993\",\"y: 0.09039993\",null,\"y: 0.09039993\",\"y: 0.09039993\",null,\"y: 0.09039993\",\"y: 0.09039993\",null,\"y: 0.09039993\",\"y: 0.09039993\",null,\"y: 0.15445841\",\"y: 0.15445841\",null,\"y: 0.15445841\",\"y: 0.15445841\",null,\"y: 0.53487512\",\"y: 0.53487512\",null,\"y: 0.53487512\",\"y: 0.53487512\",null,\"y: 0.37212328\",\"y: 0.37212328\",null,\"y: 0.37212328\",\"y: 0.37212328\",null,\"y: 0.35032421\",\"y: 0.35032421\",null,\"y: 0.35032421\",\"y: 0.35032421\",null,\"y: 0.24340284\",\"y: 0.24340284\",null,\"y: 0.24340284\",\"y: 0.24340284\",null,\"y: 0.21244316\",\"y: 0.21244316\",null,\"y: 0.21244316\",\"y: 0.21244316\",null,\"y: 0.12708171\",\"y: 0.12708171\",null,\"y: 0.12708171\",\"y: 0.12708171\",null,\"y: 0.12708171\",\"y: 0.12708171\",null,\"y: 0.12708171\",\"y: 0.12708171\",null,\"y: 0.21244316\",\"y: 0.21244316\",null,\"y: 0.21244316\",\"y: 0.21244316\",null,\"y: 0.24340284\",\"y: 0.24340284\",null,\"y: 0.24340284\",\"y: 0.24340284\",null,\"y: 0.35032421\",\"y: 0.35032421\",null,\"y: 0.35032421\",\"y: 0.35032421\",null,\"y: 0.37212328\",\"y: 0.37212328\",null,\"y: 0.37212328\",\"y: 0.37212328\",null,\"y: 0.18257734\",\"y: 0.18257734\",null,\"y: 0.18257734\",\"y: 0.18257734\",null,\"y: 0.18257734\",\"y: 0.18257734\",null,\"y: 0.18257734\",\"y: 0.18257734\",null,\"y: 0.12129831\",\"y: 0.12129831\",null,\"y: 0.12129831\",\"y: 0.12129831\",null,\"y: 0.12129831\",\"y: 0.12129831\",null,\"y: 0.12129831\",\"y: 0.12129831\",null,\"y: 0.09490209\",\"y: 0.09490209\",null,\"y: 0.09490209\",\"y: 0.09490209\",null,\"y: 0.09490209\",\"y: 0.09490209\",null,\"y: 0.09490209\",\"y: 0.09490209\",null,\"y: 0.95788286\",\"y: 0.95788286\",null,\"y: 0.95788286\",\"y: 0.95788286\",null,\"y: 0.40783063\",\"y: 0.40783063\",null,\"y: 0.40783063\",\"y: 0.40783063\",null,\"y: 0.21815448\",\"y: 0.21815448\",null,\"y: 0.21815448\",\"y: 0.21815448\",null,\"y: 0.09918675\",\"y: 0.09918675\",null,\"y: 0.09918675\",\"y: 0.09918675\",null,\"y: 0.09918675\",\"y: 0.09918675\",null,\"y: 0.09918675\",\"y: 0.09918675\",null,\"y: 0.21815448\",\"y: 0.21815448\",null,\"y: 0.21815448\",\"y: 0.21815448\",null,\"y: 0.40783063\",\"y: 0.40783063\",null,\"y: 0.40783063\",\"y: 0.40783063\",null,\"y: 0.31959962\",\"y: 0.31959962\",null,\"y: 0.31959962\",\"y: 0.31959962\",null,\"y: 0.20918247\",\"y: 0.20918247\",null,\"y: 0.20918247\",\"y: 0.20918247\",null,\"y: 0.20918247\",\"y: 0.20918247\",null,\"y: 0.20918247\",\"y: 0.20918247\",null,\"y: 0.31959962\",\"y: 0.31959962\",null,\"y: 0.31959962\",\"y: 0.31959962\",null,\"y: 0.11950480\",\"y: 0.11950480\",null,\"y: 0.11950480\",\"y: 0.11950480\",null,\"y: 0.11950480\",\"y: 0.11950480\",null,\"y: 0.11950480\",\"y: 0.11950480\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.2677165354330708,\"color\":\"rgba(228,149,165,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1.8228771534841937,1.8228771534841937,null,1.8228771534841937,1.2046648341508377,null,1.2046648341508377,1.2046648341508377,null,1.2046648341508377,1.054397227224376,null,1.8228771534841937,1.8228771534841937,null,1.8228771534841937,1.5941744666987299,null,1.5941744666987299,1.5941744666987299,null,1.5941744666987299,1.0908778897590077],\"y\":[38.9267578125,27.923828125,null,27.923828125,27.923828125,null,27.923828125,37.859375,null,37.859375,37.859375,null,38.9267578125,49.9296875,null,49.9296875,49.9296875,null,49.9296875,45.609375,null,45.609375,45.609375],\"text\":[\"y: 1.82287715\",\"y: 1.82287715\",null,\"y: 1.82287715\",\"y: 1.82287715\",null,\"y: 1.20466483\",\"y: 1.20466483\",null,\"y: 1.20466483\",\"y: 1.20466483\",null,\"y: 1.82287715\",\"y: 1.82287715\",null,\"y: 1.82287715\",\"y: 1.82287715\",null,\"y: 1.59417447\",\"y: 1.59417447\",null,\"y: 1.59417447\",\"y: 1.59417447\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.2677165354330708,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1.8228771534841937,1.2046648341508377,0.95788286362070973,0.79474550028479152,0.38162569396273166,0,0,0.6664047769347069,0.36706162143987942,0,0.24828582661663648,0.087558107117793896,0,0,0.23756964971442937,0.12990466363518882,0,0,0,0.53487511869044835,0.43836359937083058,0.20347407832470954,0,0,0.33205918608658225,0.27419929098840362,0,0.1434382567577874,0,0,0.20894513119211036,0,0.15445841184345191,0.09039992811033179,0,0,0,0.3721232755076867,0.35032421362805982,0.24340283886100486,0.2124431624834609,0.12708171116759615,0,0,0,0,0,0.18257733577118407,0,0.12129831255664315,0,0.094902085465199792,0,0,0.40783062668695391,0.21815448450140359,0.099186753204319189,0,0,0,0.31959962472454068,0.20918247212427829,0,0,0.11950480173549577,0,0,1.054397227224376,0.65936703189914236,0,0.3664468181726131,0,0.25729438180055098,0.20244506563386871,0,0.12888304229422309,0,0,0,0.47350573521866995,0,0,1.5941744666987299,1.0908778897590077,0.50094972196331145,0,0,0.73180022212606388,0.69115953326908108,0.3806270981887479,0.2552643168918356,0,0.185675404080306,0,0,0,0,0.4668075826896933,0.35841748229668219,0,0,0.1730199763105828,0,0,0.61424845626023339,0.27585786880898649,0,0,0],\"y\":[38.9267578125,27.923828125,17.98828125,6.1015625,1.5,1,2,10.703125,4.4375,3,5.875,4.5,4,5,7.25,6.5,6,7,8,16.96875,11.46875,9.5,9,10,13.4375,11.75,11,12.5,12,13,15.125,14,16.25,15.5,15,16,17,22.46875,21.0625,20.125,19.25,18.5,18,19,20,21,22,23.875,23,24.75,24,25.5,25,26,29.875,28.25,27.5,27,28,29,31.5,30.5,30,31,32.5,32,33,37.859375,35.21875,34,36.4375,35,37.875,36.75,36,37.5,37,38,39,40.5,40,41,49.9296875,45.609375,42.5,42,43,48.71875,46.9375,45.875,44.75,44,45.5,45,46,47,48,50.5,49.5,49,50,51.5,51,52,54.25,53.5,53,54,55],\"text\":[\"y: 1.82287715\",\"y: 1.20466483\",\"y: 0.95788286\",\"y: 0.79474550\",\"y: 0.38162569\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.66640478\",\"y: 0.36706162\",\"y: 0.00000000\",\"y: 0.24828583\",\"y: 0.08755811\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.23756965\",\"y: 0.12990466\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.53487512\",\"y: 0.43836360\",\"y: 0.20347408\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.33205919\",\"y: 0.27419929\",\"y: 0.00000000\",\"y: 0.14343826\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.20894513\",\"y: 0.00000000\",\"y: 0.15445841\",\"y: 0.09039993\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.37212328\",\"y: 0.35032421\",\"y: 0.24340284\",\"y: 0.21244316\",\"y: 0.12708171\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.18257734\",\"y: 0.00000000\",\"y: 0.12129831\",\"y: 0.00000000\",\"y: 0.09490209\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.40783063\",\"y: 0.21815448\",\"y: 0.09918675\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.31959962\",\"y: 0.20918247\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.11950480\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 1.05439723\",\"y: 0.65936703\",\"y: 0.00000000\",\"y: 0.36644682\",\"y: 0.00000000\",\"y: 0.25729438\",\"y: 0.20244507\",\"y: 0.00000000\",\"y: 0.12888304\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.47350574\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 1.59417447\",\"y: 1.09087789\",\"y: 0.50094972\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.73180022\",\"y: 0.69115953\",\"y: 0.38062710\",\"y: 0.25526432\",\"y: 0.00000000\",\"y: 0.18567540\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.46680758\",\"y: 0.35841748\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.17301998\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.61424846\",\"y: 0.27585787\",\"y: 0.00000000\",\"y: 0.00000000\",\"y: 0.00000000\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"transparent\",\"opacity\":1,\"size\":null,\"symbol\":null,\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"xaxis\":{\"domain\":[0,0.80000000000000004],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.5,5.5],\"tickmode\":\"array\",\"ticktext\":[\"RADIO_PR\",\"TV_PR\",\"LLPHONE_PR\",\"MPHONE_PR\",\"COMPUTER_PR\"],\"tickvals\":[1,2,3,4,5],\"categoryorder\":\"array\",\"categoryarray\":[\"RADIO_PR\",\"TV_PR\",\"LLPHONE_PR\",\"MPHONE_PR\",\"COMPUTER_PR\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":6.6417600664176026},\"tickangle\":-45,\"showline\":true,\"linecolor\":\"rgba(0,0,0,1)\",\"linewidth\":0.66417600664176002,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y\",\"title\":\"ICT Indicators\",\"hoverformat\":\".2f\"},\"xaxis2\":{\"domain\":[0.80000000000000004,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0,1.8228771534841937],\"tickmode\":\"array\",\"ticktext\":[\"0.0\",\"0.5\",\"1.0\",\"1.5\"],\"tickvals\":[0,0.5,1,1.5],\"categoryorder\":\"array\",\"categoryarray\":[\"0.0\",\"0.5\",\"1.0\",\"1.5\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":false,\"tickfont\":{\"color\":null,\"family\":null,\"size\":0},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"\",\"font\":{\"color\":null,\"family\":null,\"size\":0}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.5,55.5],\"tickmode\":\"array\",\"ticktext\":[\"Narphan\",\"Pangwaun\",\"Mongpan\",\"Nansang\",\"Kyaukme\",\"Kalaw\",\"Hseni\",\"Langkho\",\"Kunhing\",\"Laihka\",\"Monghsat\",\"Loilen\",\"Mongnai\",\"Mongton\",\"Hsipaw\",\"Hopong\",\"Monghsu\",\"Pinlaung\",\"Mongmit\",\"Pekon\",\"Kutkai\",\"Namtu\",\"Hsihseng\",\"Kyethi\",\"Tangyan\",\"Namhsan\",\"Mongyai\",\"Mongping\",\"Mongkhet\",\"Mawkmai\",\"Mongkaing\",\"Manton\",\"Matman\",\"Ywangan\",\"Pindaya\",\"Lawksawk\",\"Nyaungshwe\",\"Nawnghkio\",\"Monghpyak\",\"Mabein\",\"Mongyawng\",\"Kunlong\",\"Konkyan\",\"Mongyang\",\"Mongmao\",\"Hopang\",\"Namhkan\",\"Laukkaing\",\"Mongla\",\"Pangsang\",\"Kengtung\",\"Lashio\",\"Taunggyi\",\"Tachileik\",\"Muse\"],\"tickvals\":[1,2,3,3.9999999999999996,5,6,7,7.9999999999999991,9,10,11,12,13,14,14.999999999999998,15.999999999999998,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],\"categoryorder\":\"array\",\"categoryarray\":[\"Narphan\",\"Pangwaun\",\"Mongpan\",\"Nansang\",\"Kyaukme\",\"Kalaw\",\"Hseni\",\"Langkho\",\"Kunhing\",\"Laihka\",\"Monghsat\",\"Loilen\",\"Mongnai\",\"Mongton\",\"Hsipaw\",\"Hopong\",\"Monghsu\",\"Pinlaung\",\"Mongmit\",\"Pekon\",\"Kutkai\",\"Namtu\",\"Hsihseng\",\"Kyethi\",\"Tangyan\",\"Namhsan\",\"Mongyai\",\"Mongping\",\"Mongkhet\",\"Mawkmai\",\"Mongkaing\",\"Manton\",\"Matman\",\"Ywangan\",\"Pindaya\",\"Lawksawk\",\"Nyaungshwe\",\"Nawnghkio\",\"Monghpyak\",\"Mabein\",\"Mongyawng\",\"Kunlong\",\"Konkyan\",\"Mongyang\",\"Mongmao\",\"Hopang\",\"Namhkan\",\"Laukkaing\",\"Mongla\",\"Pangsang\",\"Kengtung\",\"Lashio\",\"Taunggyi\",\"Tachileik\",\"Muse\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":5.3134080531340802},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(0,0,0,1)\",\"linewidth\":0.66417600664176002,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"x\",\"title\":\"Townships of Shan State\",\"hoverformat\":\".2f\"},\"annotations\":[],\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":0.80000000000000004,\"y0\":0,\"y1\":1},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0.80000000000000004,\"x1\":1,\"y0\":0,\"y1\":1}],\"images\":[],\"margin\":{\"t\":60,\"r\":null,\"b\":35.06849315068493,\"l\":200},\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"y\":1,\"yanchor\":\"top\"},\"hovermode\":\"closest\",\"barmode\":\"relative\",\"title\":\"Geographic Segmentation of Shan State by ICT indicators\"},\"attrs\":{\"21c416af4b2a\":{\"x\":{},\"y\":{},\"fill\":{},\"text\":{},\"type\":\"heatmap\"},\"21c442e425b1\":{\"xend\":{},\"yend\":{},\"colour\":{},\"linetype\":{},\"size\":{},\"x\":{},\"y\":{},\"type\":\"scatter\"},\"21c413ea6b4e\":{\"colour\":{},\"shape\":{},\"size\":{},\"x\":{},\"y\":{}}},\"source\":\"A\",\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false,\"displaylogo\":false,\"modeBarButtonsToRemove\":[\"sendDataToCloud\",\"select2d\",\"lasso2d\",\"autoScale2d\",\"hoverClosestCartesian\",\"hoverCompareCartesian\",\"sendDataToCloud\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"subplot\":true,\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n### Mapping the clusters formed\n\nWith closed examination of the dendragram above, we have decided to retain six clusters.\n\n[*cutree()*](https://stat.ethz.ch/R-manual/R-devel/library/stats/html/cutree.html) of R Base will be used in the code chunk below to derive a 6-cluster model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngroups <- as.factor(cutree(hclust_ward, k=6))\n```\n:::\n\n\nThe output is called *groups*. It is a *list* object.\n\nIn order to visualise the clusters, the *groups* object need to be appended onto *shan_sf* simple feature object.\n\nThe code chunk below form the join in three steps:\n\n-   the *groups* list object will be converted into a matrix;\n-   *cbind()* is used to append *groups* matrix onto shan_sf to produce an output simple feature object called `shan_sf_cluster`; and\n-   *rename* of **dplyr** package is used to rename *as.matrix.groups* field as *CLUSTER*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf_cluster <- cbind(shan_sf, as.matrix(groups)) %>%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n```\n:::\n\n\nNext, *qtm()* of **tmap** package is used to plot the choropleth map showing the cluster formed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(shan_sf_cluster, \"CLUSTER\")\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\nThe choropleth map above reveals the clusters are very fragmented. The is one of the major limitation when non-spatial clustering algorithm such as hierarchical cluster analysis method is used.\n\n## Spatially Constrained Clustering: SKATER approach\n\nIn this section, you will learn how to derive spatially constrained cluster by using [*skater()*](https://r-spatial.github.io/spdep/reference/skater.html) method of [**spdep**](https://r-spatial.github.io/spdep/index.html) package.\n\n### Converting into SpatialPolygonsDataFrame\n\nFirst, we need to convert `shan_sf` into SpatialPolygonsDataFrame. This is because SKATER function only support **sp** objects such as SpatialPolygonDataFrame.\n\nThe code chunk below uses [*as_Spatial()*](https://r-spatial.github.io/sf/reference/coerce-methods.html) of **sf** package to convert *shan_sf* into a SpatialPolygonDataFrame called *shan_sp*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sp <- as_Spatial(shan_sf)\n```\n:::\n\n\n### Computing Neighbour List\n\nNext, [poly2nd()](https://r-spatial.github.io/spdep/reference/poly2nb.html) of **spdep** package will be used to compute the neighbours list from polygon list.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.nb <- poly2nb(shan_sp)\nsummary(shan.nb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n```\n\n\n:::\n:::\n\n\nWe can plot the neighbours list on shan_sp by using the code chunk below. Since we now can plot the community area boundaries as well, we plot this graph on top of the map. The first plot command gives the boundaries. This is followed by the plot of the neighbor list object, with coordinates applied to the original SpatialPolygonDataFrame (Shan state township boundaries) to extract the centroids of the polygons. These are used as the nodes for the graph representation. We also set the color to blue and specify add=TRUE to plot the network on top of the boundaries.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- st_coordinates(\n  st_centroid(st_geometry(shan_sf)))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf), \n     border=grey(.5))\nplot(shan.nb,\n     coords, \n     col=\"blue\", \n     add=TRUE)\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\nNote that if you plot the network first and then the boundaries, some of the areas will be clipped. This is because the plotting area is determined by the characteristics of the first plot. In this example, because the boundary map extends further than the graph, we plot it first.\n\n### Computing minimum spanning tree\n\n#### Calculating edge costs\n\nNext, [*nbcosts()*](https://r-spatial.github.io/spdep/reference/nbcosts.html) of **spdep** package is used to compute the cost of each edge. It is the distance between it nodes. This function compute this distance using a data.frame with observations vector in each node.\n\nThe code chunk below is used to compute the cost of each edge.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlcosts <- nbcosts(shan.nb, shan_ict)\n```\n:::\n\n\nFor each observation, this gives the pairwise dissimilarity between its values on the five variables and the values for the neighbouring observation (from the neighbour list). Basically, this is the notion of a generalised weight for a spatial weights matrix.\n\nNext, We will incorporate these costs into a weights object in the same way as we did in the calculation of inverse of distance weights. In other words, we convert the neighbour list to a list weights object by specifying the just computed ***lcosts*** as the weights.\n\nIn order to achieve this, [*nb2listw()*](https://r-spatial.github.io/spdep/reference/nb2listw.html) of **spdep** package is used as shown in the code chunk below.\n\nNote that we specify the *style* as **B** to make sure the cost values are not row-standardised.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.w <- nb2listw(shan.nb, \n                   lcosts, \n                   style=\"B\")\nsummary(shan.w)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1        S2\nB 55 3025 76267.65 58260785 522016004\n```\n\n\n:::\n:::\n\n\n### Computing minimum spanning tree\n\nThe minimum spanning tree is computed by mean of the [*mstree()*](https://r-spatial.github.io/spdep/reference/mstree.html) of **spdep** package as shown in the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.mst <- mstree(shan.w)\n```\n:::\n\n\nAfter computing the MST, we can check its class and dimension by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(shan.mst)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"mst\"    \"matrix\"\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(shan.mst)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 54  3\n```\n\n\n:::\n:::\n\n\nNote that the dimension is 54 and not 55. This is because the minimum spanning tree consists on n-1 edges (links) in order to traverse all the nodes.\n\nWe can display the content of *shan.mst* by using *head()* as shown in the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(shan.mst)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2]      [,3]\n[1,]   54   48  47.79331\n[2,]   54   17 109.08506\n[3,]   54   45 127.42203\n[4,]   45   52 146.78891\n[5,]   52   13 110.55197\n[6,]   13   28  92.79567\n```\n\n\n:::\n:::\n\n\nThe plot method for the MST include a way to show the observation numbers of the nodes in addition to the edge. As before, we plot this together with the township boundaries. We can see how the initial neighbour list is simplified to just one edge connecting each of the nodes, while passing through all the nodes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf), \n                 border=gray(.5))\nplot.mst(shan.mst, \n         coords, \n         col=\"blue\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-52-1.png){width=672}\n:::\n:::\n\n\n### Computing spatially constrained clusters using SKATER method\n\nThe code chunk below compute the spatially constrained cluster using [*skater()*](https://r-spatial.github.io/spdep/reference/skater.html) of **spdep** package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclust6 <- spdep::skater(edges = shan.mst[,1:2], \n                 data = shan_ict, \n                 method = \"euclidean\", \n                 ncuts = 5)\n```\n:::\n\n\nThe *skater()* takes three mandatory arguments: - the first two columns of the MST matrix (i.e. not the cost), - the data matrix (to update the costs as units are being grouped), and - the number of cuts. Note: It is set to **one less than the number of clusters**. So, the value specified is **not** the number of clusters, but the number of cuts in the graph, one less than the number of clusters.\n\nThe result of the *skater()* is an object of class **skater**. We can examine its contents by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(clust6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 8\n $ groups      : num [1:55] 3 3 6 3 3 3 3 3 3 3 ...\n $ edges.groups:List of 6\n  ..$ :List of 3\n  .. ..$ node: num [1:22] 13 48 54 55 45 37 34 16 25 52 ...\n  .. ..$ edge: num [1:21, 1:3] 48 55 54 37 34 16 45 25 13 13 ...\n  .. ..$ ssw : num 3423\n  ..$ :List of 3\n  .. ..$ node: num [1:18] 47 27 53 38 42 15 41 51 43 32 ...\n  .. ..$ edge: num [1:17, 1:3] 53 15 42 38 41 51 15 27 15 43 ...\n  .. ..$ ssw : num 3759\n  ..$ :List of 3\n  .. ..$ node: num [1:11] 2 6 8 1 36 4 10 9 46 5 ...\n  .. ..$ edge: num [1:10, 1:3] 6 1 8 36 4 6 8 10 10 9 ...\n  .. ..$ ssw : num 1458\n  ..$ :List of 3\n  .. ..$ node: num [1:2] 44 20\n  .. ..$ edge: num [1, 1:3] 44 20 95\n  .. ..$ ssw : num 95\n  ..$ :List of 3\n  .. ..$ node: num 23\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n  ..$ :List of 3\n  .. ..$ node: num 3\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n $ not.prune   : NULL\n $ candidates  : int [1:6] 1 2 3 4 5 6\n $ ssto        : num 12613\n $ ssw         : num [1:6] 12613 10977 9962 9540 9123 ...\n $ crit        : num [1:2] 1 Inf\n $ vec.crit    : num [1:55] 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \"class\")= chr \"skater\"\n```\n\n\n:::\n:::\n\n\nThe most interesting component of this list structure is the groups vector containing the labels of the cluster to which each observation belongs (as before, the label itself is arbitary). This is followed by a detailed summary for each of the clusters in the edges.groups list. Sum of squares measures are given as ssto for the total and ssw to show the effect of each of the cuts on the overall criterion.\n\nWe can check the cluster assignment by using the conde chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nccs6 <- clust6$groups\nccs6\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 3 3 6 3 3 3 3 3 3 3 2 1 1 1 2 1 1 1 2 4 1 2 5 1 1 1 2 1 2 2 1 2 2 1 1 3 1 2\n[39] 2 2 2 2 2 4 1 3 2 1 1 1 2 1 2 1 1\n```\n\n\n:::\n:::\n\n\nWe can find out how many observations are in each cluster by means of the table command. Parenthetially, we can also find this as the dimension of each vector in the lists contained in edges.groups. For example, the first list has node with dimension 12, which is also the number of observations in the first cluster.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(ccs6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nccs6\n 1  2  3  4  5  6 \n22 18 11  2  1  1 \n```\n\n\n:::\n:::\n\n\nLastly, we can also plot the pruned tree that shows the five clusters on top of the townshop area.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf), \n     border=gray(.5))\nplot(clust6, \n     coords, \n     cex.lab=.7,\n     groups.colors=c(\"red\",\"green\",\"blue\", \"brown\", \"pink\"),\n     cex.circles=0.005, \n     add=TRUE)\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-57-1.png){width=384}\n:::\n:::\n\n\n### Visualising the clusters in choropleth map\n\nThe code chunk below is used to plot the newly derived clusters by using SKATER method.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngroups_mat <- as.matrix(clust6$groups)\nshan_sf_spatialcluster <- cbind(shan_sf_cluster, as.factor(groups_mat)) %>%\n  rename(`SP_CLUSTER`=`as.factor.groups_mat.`)\nqtm(shan_sf_spatialcluster, \"SP_CLUSTER\")\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-58-1.png){width=672}\n:::\n:::\n\n\nFor easy comparison, it will be better to place both the hierarchical clustering and spatially constrained hierarchical clustering maps next to each other.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhclust.map <- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\nshclust.map <- qtm(shan_sf_spatialcluster,\n                   \"SP_CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(hclust.map, shclust.map,\n             asp=NA, ncol=2)\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-59-1.png){width=960}\n:::\n:::\n\n\n## Spatially Constrained Clustering: ClustGeo Method\n\nIn this section, you will gain hands-on experience on using functions provided by **ClustGeo** package to perform non-spatially constrained hierarchical cluster analysis and spatially constrained cluster analysis.\n\n### A short note about ClustGeo package\n\n[**ClustGeo**](https://cran.r-project.org/web/packages/ClustGeo/) package is an R package specially designed to support the need of performing spatially constrained cluster analysis. More specifically, it provides a Ward-like hierarchical clustering algorithm called `hclustgeo()` including spatial/geographical constraints.\n\nIn the nutshell, the algorithm uses two dissimilarity matrices D0 and D1 along with a mixing parameter alpha, whereby the value of alpha must be a real number between \\[0, 1\\]. D0 can be non-Euclidean and the weights of the observations can be non-uniform. It gives the dissimilarities in the **attribute/clustering variable space**. D1, on the other hand, gives the dissimilarities in the **constraint space**. The criterion minimised at each stage is a convex combination of the homogeneity criterion calculated with D0 and the homogeneity criterion calculated with D1.\n\nThe idea is then to determine a value of alpha which increases the spatial contiguity without deteriorating too much the quality of the solution based on the variables of interest. This need is supported by a function called `choicealpha()`.\n\n### Ward-like hierarchical clustering: ClustGeo\n\nClustGeo package provides function called `hclustgeo()` to perform a typical Ward-like hierarchical clustering just like `hclust()` you learned in previous section.\n\nTo perform non-spatially constrained hierarchical clustering, we only need to provide the function a dissimilarity matrix as shown in the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnongeo_cluster <- hclustgeo(proxmat)\nplot(nongeo_cluster, cex = 0.5)\nrect.hclust(nongeo_cluster, \n            k = 6, \n            border = 2:5)\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-60-1.png){width=672}\n:::\n:::\n\n\nNote that the dissimilarity matrix must be an object of class `dist`, i.e. an object obtained with the function `dist()`. For sample code chunk, please refer to [5.7.6 Computing proximity matrix](https://r4gdsa.netlify.app/chap05.html#computing-proximity-matrix)\n\n#### Mapping the clusters formed\n\nSimilarly, we can plot the clusters on a categorical area shaded map by using the steps we learned in 5.7.12 Mapping the clusters formed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngroups <- as.factor(cutree(nongeo_cluster, k=6))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf_ngeo_cluster <- cbind(shan_sf, as.matrix(groups)) %>%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(shan_sf_ngeo_cluster, \"CLUSTER\")\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-63-1.png){width=672}\n:::\n:::\n\n\n### Spatially Constrained Hierarchical Clustering\n\nBefore we can performed spatially constrained hierarchical clustering, a spatial distance matrix will be derived by using [`st_distance()`](https://r-spatial.github.io/sf/reference/geos_measures.html) of sf package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndist <- st_distance(shan_sf, shan_sf)\ndistmat <- as.dist(dist)\n```\n:::\n\n\nNotice that `as.dist()` is used to convert the data frame into matrix.\n\nNext, `choicealpha()` will be used to determine a suitable value for the mixing parameter alpha as shown in the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr <- choicealpha(proxmat, distmat, range.alpha = seq(0, 1, 0.1), K=6, graph = TRUE)\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-65-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-65-2.png){width=672}\n:::\n:::\n\n\nWith reference to the graphs above, alpha = 0.3 will be used as shown in the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclustG <- hclustgeo(proxmat, distmat, alpha = 0.3)\n```\n:::\n\n\nNext, `cutree()` is used to derive the cluster objecct.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngroups <- as.factor(cutree(clustG, k=6))\n```\n:::\n\n\nWe will then join back the group list with *shan_sf* polygon feature data frame by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf_Gcluster <- cbind(shan_sf, as.matrix(groups)) %>%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n```\n:::\n\n\nWe can now plot the map of the newly delineated spatially constrained clusters.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(shan_sf_Gcluster, \"CLUSTER\")\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-69-1.png){width=672}\n:::\n:::\n\n\n## Visual Interpretation of Clusters\n\n### Visualising individual clustering variable\n\nCode chunk below is used to reveal the distribution of a clustering variable (i.e RADIO_PR) by cluster.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = shan_sf_ngeo_cluster,\n       aes(x = CLUSTER, y = RADIO_PR)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-70-1.png){width=672}\n:::\n:::\n\n\nThe boxplot reveals Cluster 3 displays the highest mean Radio Ownership Per Thousand Household. This is followed by Cluster 2, 1, 4, 6 and 5.\n\n### Multivariate Visualisation\n\nPast studies shown that parallel coordinate plot can be used to reveal clustering variables by cluster very effectively. In the code chunk below, [`ggparcoord()`](https://ggobi.github.io/ggally/reference/ggparcoord.html) of [**GGally**](https://ggobi.github.io/ggally/index.html) package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggparcoord(data = shan_sf_ngeo_cluster, \n           columns = c(17:21), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of ICT Variables by Cluster\") +\n  facet_grid(~ CLUSTER) + \n  theme(axis.text.x = element_text(angle = 30))\n```\n\n::: {.cell-output-display}\n![](chap12_files/figure-html/unnamed-chunk-71-1.png){width=1152}\n:::\n:::\n\n\nThe parallel coordinate plot above reveals that households in Cluster 4 townships tend to own the highest number of TV and mobile-phone. On the other hand, households in Cluster 5 tends to own the lowest of all the five ICT.\n\nNote that the `scale` argument of `ggparcoor()` provide several methods to scale the clustering variables. They are:\n\n-   std: univariately, subtract mean and divide by standard deviation.\n-   robust: univariately, subtract median and divide by median absolute deviation.\n-   uniminmax: univariately, scale so the minimum of the variable is zero, and the maximum is one.\n-   globalminmax: no scaling is done; the range of the graphs is defined by the global minimum and the global maximum.\n-   center: use uniminmax to standardize vertical height, then center each variable at a value specified by the scaleSummary param.\n-   centerObs: use uniminmax to standardize vertical height, then center each variable at the value of the observation specified by the centerObsID param\n\nThere is no one best scaling method to use. You should explore them and select the one that best meet your analysis need.\n\nLast but not least, we can also compute the summary statistics such as mean, median, sd, etc to complement the visual interpretation.\n\nIn the code chunk below, `group_by()` and `summarise()` of dplyr are used to derive mean values of the clustering variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf_ngeo_cluster %>% \n  st_set_geometry(NULL) %>%\n  group_by(CLUSTER) %>%\n  summarise(mean_RADIO_PR = mean(RADIO_PR),\n            mean_TV_PR = mean(TV_PR),\n            mean_LLPHONE_PR = mean(LLPHONE_PR),\n            mean_MPHONE_PR = mean(MPHONE_PR),\n            mean_COMPUTER_PR = mean(COMPUTER_PR))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  CLUSTER mean_RADIO_PR mean_TV_PR mean_LLPHONE_PR mean_MPHONE_PR\n  <chr>           <dbl>      <dbl>           <dbl>          <dbl>\n1 1               221.        521.            44.2           246.\n2 2               237.        402.            23.9           134.\n3 3               300.        611.            52.2           392.\n4 4               196.        744.            99.0           651.\n5 5               124.        224.            38.0           132.\n6 6                98.6       499.            74.5           468.\n# ℹ 1 more variable: mean_COMPUTER_PR <dbl>\n```\n\n\n:::\n:::\n",
    "supporting": [
      "chap12_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}